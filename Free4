gg.setVisible(false)
gg.sleep(200)
gg.toast("Loading.. ")
gg.sleep(200)
gg.toast("▓L▒▒▒▒▒▒▒▒▒")
gg.sleep(100)
gg.toast("▓▓T▒▒▒▒▒▒▒▒")
gg.sleep(100)
gg.toast("▓▓▓N▒▒▒▒▒▒▒")
gg.sleep(100)
gg.toast("▓▓▓▓S▒▒▒▒▒▒")
gg.sleep(100)
gg.toast("▓▓▓▓▓W▒▒▒▒▒")
gg.sleep(100)
gg.toast("▓▓▓▓▓▓E▒▒▒▒")
gg.sleep(100)
gg.toast("▓▓▓▓▓▓▓L▒▒▒")
gg.sleep(100)
gg.toast("▓▓▓▓▓▓▓▓O▒▒")
gg.sleep(100)
gg.toast("▓▓▓▓▓▓▓▓▓V▒")
gg.sleep(100)
 gg.toast(" ▓▓▓▓▓▓▓▓▓E▒")
gg.sleep(100)
gg.toast("▓L▓T▓N▓S▓W▓E▓L▓O▓V▓E▓")
gg.sleep(200)
gg.toast("L")
gg.sleep(200)
gg.toast("T")
gg.sleep(200)
gg.toast("N")
gg.sleep(200)
gg.toast("S")
gg.sleep(200)
gg.toast(" █ 𝐖𝐞 █ ")
gg.sleep(200)
gg.toast(" ▇ █ 𝐀𝐫𝐞█ ▇ ")
gg.sleep(200)
gg.toast(" ▇ █ █𝐋𝐓𝐍𝐒█ ▇ ▆ ")
gg.sleep(200)
gg.toast(" ▇ █ 𝐖𝐞█ ▇ ")
gg.sleep(200)
gg.toast(" ▆ ▇ █  𝐀𝐫𝐞  █ ▇ ▆ ")
gg.sleep(200)
gg.toast("  ▇ █  𝐋𝐓𝐍𝐒 █ ▇ ")
gg.sleep(200)
gg.toast(" ▆ ▇ █  𝐖𝐞 █ ▇ ▆ ")
gg.sleep(200)
gg.toast("▁▅ ▆ ▇  𝐀𝐫𝐞 █ ▇ ▆ ")
gg.sleep(200)
gg.toast(" ▁▅ ▆ █ 𝐋𝐓𝐍𝐒 █ ▅ ▆  ")
gg.sleep(200)
gg.toast("▆ ▇ █ 𝐖𝐄 𝐋𝐎𝐕𝐄 𝐋𝐓𝐍𝐒█ ▇ ▆ ")
gg.sleep(200)
gg.toast("🇲🇲𝐂𝐨𝐝𝐞𝐝 𝐁𝐲 𝐥𝐭𝐧𝐬 𝐭𝐞𝐚𝐦🇲🇲")
gg.sleep(600)
gg.alert("🇲🇲🛡️ Thank you Vip Users🇲🇲🛡️\n\n➳ Please keep support to me\n➳ Please read the instructions\n➳ Check always developer info\n➳ BeAware of Scammers\n➳ Premium Version- S15 FOR Script\n➳ Creator by 🅻🆃🅽🆂✯🅺🅸🅻🅻🅴🆁✯🅽🅰🆃🆂🅾🅴\n\n©2020🇲🇲🅻🆃🅽🆂✯🅶🅰🅼🅸🅽🅶🇲🇲", "⟬NEXT⟭")
gg.alert("🇲🇲𝐋𝐎𝐍𝐆 𝐓𝐈𝐌𝐄 𝐍𝐎 𝐒𝐄𝐄🇲🇲")
HOME = 1
if io.open("/storage/emulated/0/Download/.conj") then
gg.setVisible(false)

PUBGMH = 1

function HOME()
MN = gg.choice({ 
"1[[🇲🇲]]Antiban [[Lobby ]]",
"2[[🇲🇲]]Wallhack All SD[[Train]]",
"3[[🇲🇲]]Colour [[Train]]",
"4[[🇲🇲]]Less Recoil [Lobby])",
"5[[🇲🇲]]Headshot[[Before Plane & Game]]",
"6[[🇲🇲]]Antenna hack",
"7[[🇲🇲]]Wide View",
"8[[🇲🇲]]G90T",
"Ｅｘｉｔ"
}, nil,'✭❈ KILLER ❈\n࿇ Script Version 👉 NATSOE V6')

if MN == 1 then
ME1()
end
if MN == 2 then
WH()
end
if MN == 3 then
CLR()
end
if MN == 4 then
REC()
end
if MN == 5 then
alert()
end
if MN == 6  then
AT()
end
if MN == 7 then
WV()
end
if MN == 8 then
G90T()
end
if MN == 9 then
close()
end
PUBGMH = -1
end
function alert()
gg.alert(" No Need To Cheat Headshot")
end
function G90T()
  ML = gg.multiChoice({
    "V1 Wall And Colour",
    "V2 Wall And Colour",
    "V3 Wall And Colour",
    "BACK"
  }, nil, "🇲🇲some times Wallhack not work🇲🇲")
  if ML == nil then
  else
   if ML[1] == true then
      G90TV1()
    end
    if ML[2] == true then
     G90TV2()
    end
    if ML[3] == true then
    G90TV3()
    end
    if ML[4] == true then
      HOME()
    end
  end
  PUBGMH = -1
end
function G90TV3()
DIE2 = gg.multiChoice({
"🌟 WALL HACK G90T",
"🖥️🖥️ COLOR Black ",
" 🍏🍏Colour Green",
"🍋🍋Colour Yellow",
"🍒🍒Colour Red",
"🔙EXIT"}, nil, "")
if DIE2 == nil then else
if DIE2[1] == true then G90T3() end
if DIE2[2] == true then Black() end
if DIE2[3] == true then Green() end
if DIE2[4] == true then Yellow() end
if DIE2[5] == true then Red() end
if DIE2[6] == true then close() end
end
DIE = -1
end
function G90T3()
  gg.clearResults()
  gg.searchNumber("\"1.793662e-43F;3.5873241e-43F;1.1210388e-44F;0.5F:512\"", gg.TYPE_FLOAT)
  gg.refineNumber("\"0.5\"", gg.TYPE_FLOAT)
  t = gg.getResults(100)
  for i, i in ipairs(t) do
    if i.flags == gg.TYPE_FLOAT then
      i.value = "2.0"
      i.freeze = true
    end
  end
  gg.addListItems(t)
  gg.clearResults ()
  gg.toast("WH Mediatek G90T")
end

function Black()
  gg.clearResults()
  gg.setRanges(gg.REGION_C_ALLOC)
  gg.searchNumber("40D;32D;16D;2D::37", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
  gg.searchNumber("40", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
  gg.getResults(100)
  gg.editAll("39", gg.TYPE_DWORD)
  gg.toast("Black")
end

function Green()
  gg.clearResults()
  gg.setRanges(gg.REGION_C_ALLOC)
  gg.searchNumber("2;2;8;6;40:45", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
  gg.processResume()
  gg.refineNumber("40", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
  gg.getResults(10, nil, nil, nil, nil, nil, nil, nil, nil)
  gg.editAll("32", gg.TYPE_DWORD)
  gg.processResume()
  gg.toast("Green")
end

function Yellow()
  gg.clearResults()
  gg.setRanges(gg.REGION_C_ALLOC)
  gg.searchNumber("16;32;40;48;40:41", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
  gg.searchNumber("40", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
  gg.getResults(10)
  gg.editAll("36", gg.TYPE_DWORD)
  gg.clearResults()
  gg.toast("YELLOW")
end

function Red()
  gg.clearResults()
  gg.setRanges(gg.REGION_C_ALLOC)
  gg.searchNumber("16;32;40;48;40:41", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
  gg.searchNumber("40", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
  gg.getResults(10)
  gg.editAll("38", gg.TYPE_DWORD)
  gg.toast("LTNS")
end


function G90TV1()
DIE1 = gg.multiChoice({
"🌟 WALL HACK G90T",
"🌟 COLOR RED ",
"🔙EXIT"}, nil, "")
if DIE1 == nil then else
if DIE1[1] == true then WHG90T() end
if DIE1[2] == true then CHG90T() end
if DIE1[3] == true then close() end
end
DIE = -1
end

function WHG90T()
gg.clearResults()
  
  gg.clearResults()
  gg.setRanges(gg.REGION_C_ALLOC)
  gg.searchNumber("16;32;40;48;40:41", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
  gg.searchNumber("40", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
  gg.getResults(10)
  gg.editAll("36", gg.TYPE_DWORD)
  gg.clearResults()
  gg.searchNumber("\"1.793662e-43F;3.5873241e-43F;1.1210388e-44F;0.5F:512\"", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
  gg.refineNumber("\"0.5\"", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
  n = gg.getResultCount()
  jz = gg.getResults(n)
  do
    do
      for i = 1, n do
        gg.addListItems({
          [1] = {
            address = jz[i].address + 0,
            flags = 16,
            freeze = true,
            value = 2
          }
        })
      end
    end
  end
  gg.clearResults()
  gg.alert("Wallhack G90t Activated")
end

function CHG90T()

  gg.clearResults()
  gg.setRanges(gg.REGION_C_ALLOC)
  gg.searchNumber("8;16;32;48;40::169", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
  gg.searchNumber("40", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
  gg.getResults(10)
  gg.editAll("38", gg.TYPE_DWORD)
  gg.clearResults()
  gg.alert("Color Red ")
end
function G90TV2()
  ML = gg.multiChoice({
    "Wallhack 1",
    "Wallhack 2",
    "Wallhack 3",
    "Colour🌈 1",
    "Colour🌈 2",
    "BACK"
  }, nil, "🇲🇲some times Wallhack not work🇲🇲")
  if ML == nil then
  else
    if ML[1] == true then
      ML1()
    end
    if ML[2] == true then
      ML2()
    end
    if ML[3] == true then
      ML3()
    end
    if ML[4] == true then
      ML4()
    end
    if ML[5] == true then
      ML5()
    end
    if ML[6] == true then
      HOME()
    end
  end
  PUBGMH = -1
end

function ML1()
  gg.clearResults()
  gg.setRanges(gg.REGION_C_ALLOC)
  gg.searchNumber("1.793662e-43F;3.5873241e-43F;1.1210388e-44F;0.5F:512", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
  gg.processResume()
  gg.refineNumber("0.5", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
  gg.getResults(500, nil, nil, nil, nil, nil, nil, nil, nil)
  gg.getResults(500, nil, nil, nil, nil, nil, nil, nil, nil)
  jg = gg.getResults(500)
  sl = gg.getResultCount()
  if 500 < sl then
    sl = 500
  end
  do
    do
      for _FORV_3_ = 1, sl do
        dzy = jg[_FORV_3_].address
        gg.addListItems({
          [1] = {
            address = dzy,
            flags = gg.TYPE_FLOAT,
            freeze = true,
            value = 2
          }
        })
      end
    end
  end
  gg.toast("Wallhack Activated")
end

function ML2()
  gg.alert("wall hack on HD/Medium/classic")
  gg.alert("ONLY FOR MEDITEK G90K HACKS")
  gg.setRanges(gg.REGION_C_ALLOC)
  gg.alert("Adjust Graphics Smooth /low /Classic")
  gg.searchNumber("0.5;-360.0;360.0;776.0;0.5;0.5:273", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
  gg.refineNumber("0.5", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
  gg.getResults(40, nil, nil, nil, nil, nil, nil, nil, nil)
  gg.getResults(40, nil, nil, nil, nil, nil, nil, nil, nil)
  jg = gg.getResults(40)
  sl = gg.getResultCount()
  if sl > 100 then
    sl = 40
  end
  do
    do
      for _FORV_3_ = 1, sl do
        dzy = jg[_FORV_3_].address
        gg.addListItems({
          [1] = {
            address = dzy,
            flags = gg.TYPE_FLOAT,
            freeze = true,
            value = 2
          }
        })
      end
    end
  end
  gg.toast("Wallhack Activated")
end

function ML3()
  gg.setRanges(gg.REGION_C_ALLOC)
  gg.searchNumber("360.0;776.0;0.5;2.80259693e-45;5.60519386e-45;4.17586942e-43;2.94272678e-44;1.26116862e-44;9.80908925e-45;8.40779079e-45;7.00649232e-45:2293", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
  gg.refineNumber("0.5", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
  revert = gg.getResults(500, nil, nil, nil, nil, nil, nil, nil, nil)
  local t = gg.getResults(500, nil, nil, nil, nil, nil, nil, nil, nil)
  do
    do
      for _FORV_4_, _FORV_5_ in ipairs(t) do
        if _FORV_5_.flags == gg.TYPE_FLOAT then
          _FORV_5_.value = "2"
          _FORV_5_.freeze = true
        end
      end
    end
  end
  gg.toast("Wallhavk Done")
end

function ML4()
  gg.setRanges(gg.REGION_C_ALLOC)
  gg.searchNumber("\"40;734003200:5\"", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
  gg.refineNumber("\"40\"", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
  revert = gg.getResults(600, nil, nil, nil, nil, nil, nil, nil, nil)
  gg.editAll("\"38\"", gg.TYPE_DWORD)
end

function ML5()
  gg.setRanges(gg.REGION_C_ALLOC)
  gg.searchNumber("935329792;40;734003200;32;801112064;48;801112064;16;801112064;2;2;2;64:85", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
  gg.processResume()
  gg.refineNumber("40", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
  gg.getResults(30, nil, nil, nil, nil, nil, nil, nil, nil)
  gg.getResults(30, nil, nil, nil, nil, nil, nil, nil, nil)
  gg.editAll("\"28\"", gg.TYPE_DWORD)
  gg.toast("restart")
end

function ME1()
ME1 = gg.choice({" 🇨🇰🇨🇰Antiban GL ","🇰🇷🇰🇷Antiban KR ","Back"}, nil," 🇲🇲🇲🇲 NATSOE 🇲🇲🇲🇲")
if ME1 == nil then
else
if ME1 == 1 then
 MEGL()
end
if ME1 ==2 then
 MEGL()
end
if ME1 == 3 then
HOME()
end
end
PUBGMH = -1
end
function MEGL()
gg.clearResults()
os.remove("src/main/java/com/google/errorprone/annotations")
os.remove("src/main/java/com/google/errorprone/annotations")
os.remove("src/main/java/com/google/errorprone/annotations/concurrent")
os.remove("third_party.java_src.error_prone.project.annotations.Google_internal")
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
gg.setVisible(false)
gg.searchNumber("135682;144387", gg.TYPE_DWORD)
gg.searchNumber("135682", gg.TYPE_DWORD)
gg.getResults(50000)
gg.setVisible(false)
gg.editAll("0", gg.TYPE_DWORD)
gg.setVisible(false)
gg.clearResults()
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
gg.setVisible(false)
gg.searchNumber("134658;131586", gg.TYPE_DWORD)
gg.searchNumber("134658", gg.TYPE_DWORD)
gg.getResults(50000)
gg.setVisible(false)
gg.editAll("0", gg.TYPE_DWORD)
gg.setVisible(false)
gg.clearResults()
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
gg.setVisible(false)
gg.searchNumber("4096;135682", gg.TYPE_DWORD)
gg.searchNumber("4096", gg.TYPE_DWORD)
gg.getResults(50000)
gg.setVisible(false)
gg.editAll("0", gg.TYPE_DWORD)
gg.setVisible(false)
gg.clearResults()
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber("157567", gg.TYPE_DWORD)
gg.getResults(50000)
gg.editAll("0", gg.TYPE_DWORD)
gg.clearResults()
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber("135938", gg.TYPE_DWORD)
gg.getResults(50000)
gg.editAll("0", gg.TYPE_DWORD)
gg.clearResults()
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber("135170", gg.TYPE_DWORD)
gg.getResults(50000)
gg.editAll("0", gg.TYPE_DWORD)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber("135426", gg.TYPE_DWORD)
gg.getResults(50000)
gg.editAll("0", gg.TYPE_DWORD)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber("135212", gg.TYPE_DWORD)
gg.getResults(50000)
gg.editAll("0", gg.TYPE_DWORD)
gg.clearResults()
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
gg.setVisible(false)
gg.searchNumber("134914;262403", gg.TYPE_DWORD)
gg.searchNumber("134914", gg.TYPE_DWORD)
gg.getResults(50000)
gg.setVisible(false)
gg.editAll("0", gg.TYPE_DWORD)
gg.setVisible(false)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
gg.setVisible(false)
gg.searchNumber("133378;262403", gg.TYPE_DWORD)
gg.searchNumber("133378", gg.TYPE_DWORD)
gg.getResults(50000)
gg.setVisible(false)
gg.editAll("0", gg.TYPE_DWORD)
gg.setVisible(false)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
gg.setVisible(false)
gg.searchNumber("131330;133634", gg.TYPE_DWORD)
gg.searchNumber("131330", gg.TYPE_DWORD)
gg.getResults(50000)
gg.setVisible(false)
gg.editAll("0", gg.TYPE_DWORD)
gg.setVisible(false)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
gg.setVisible(false)
gg.searchNumber("131842;132098", gg.TYPE_DWORD)
gg.searchNumber("131842", gg.TYPE_DWORD)
gg.getResults(50000)
gg.setVisible(false)
gg.editAll("0", gg.TYPE_DWORD)
gg.setVisible(false)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber("133634", gg.TYPE_DWORD)
gg.getResults(50000)
gg.editAll("0", gg.TYPE_DWORD)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber("131331", gg.TYPE_DWORD)
gg.getResults(50000)
gg.editAll("0", gg.TYPE_DWORD)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber("132098", gg.TYPE_DWORD)
gg.getResults(50000)
gg.editAll("0", gg.TYPE_DWORD)
gg.clearResults()
gg.sleep(1600)
gg.alert("BYPASS SUCCESS️")
gg.alert('[✔] ᴍᴇᴍᴏʀʏ ᴀɴᴛɪsᴇᴀʟ\n⍟ ʟᴛɴs ʙʏᴘᴀss ᴍᴇᴍᴏʀʏ sᴜᴄᴄᴇss')
end
function CLR()
CHACKKK1 = gg.choice({"🇲🇲New Color All Device🇲🇲","🇲🇲 New Color Exynos🇲🇲","🇲🇲 Color HDR🇲🇲","🇲🇲Color Kirin🇲🇲","🇲🇲Color Mediatek🇲🇲","🇲🇲Color Vehicle🇲🇲","🇲🇲Color 400🇲🇲","🇲🇲Color 410🇲🇲","🇲🇲Color 415🇲🇲","🇲🇲Color 425🇲🇲","🇲🇲Color 430🇲🇲","🇲🇲 Color 435🇲🇲","🇲🇲Color 450🇲🇲","🇲🇲Color 610🇲🇲","🇲🇲Color 615🇲🇲","🇲🇲Color 625🇲🇲","🇲🇲Color 636🇲🇲","🇲🇲Color 650🇲🇲","🇲🇲Color 653🇲🇲","🇲🇲Color 660🇲🇲"," 🇲🇲Color 665🇲🇲","🇲🇲Color 675🇲🇲","🇲🇲Color 710🇲🇲","🇲🇲Color 712🇲🇲","🇲🇲Color 835🇲🇲","🇲🇲 Color 845🇲🇲","🇲🇲Color 855🇲🇲","BACK"}, nil, "🇲🇲🇲🇲gg V18🇲🇲🇲🇲")
if CHACKKK1 == nil then
else
if CHACKKK1 == 1 then
cr1()
end
if CHACKKK1 == 2 then
cr2()
end
if CHACKKK1 == 3 then
cr3()
end
if CHACKKK1 == 4 then
cr4()
end
if CHACKKK1 == 5 then
cr5()
end
if CHACKKK1 == 6 then
cr6()
end
if CHACKKK1 == 7 then
cr7()
end
if CHACKKK1 == 8 then
cr8()
end
if CHACKKK1 == 9 then
cr9()
end
if CHACKKK1 == 10 then
cr10()
end
if CHACKKK1 == 11 then
cr11()
end
if CHACKKK1 == 12 then
cr12()
end
if CHACKKK1 == 13 then
cr13()
end
if CHACKKK1 == 14 then
cr14()
end
if CHACKKK1 == 15 then
cr15()
end
if CHACKKK1 == 16 then
cr16()
end
if CHACKKK1 == 17 then
cr17()
end
if CHACKKK1 == 18 then
cr18()
end
if CHACKKK1 == 19 then
cr19()
end
if CHACKKK1 == 20 then
cr20()
end
if CHACKKK1 == 21 then
cr21()
end
if CHACKKK1 == 22 then
cr22()
end
if CHACKKK1 == 23 then
cr23()
end
if CHACKKK1 == 24 then
cr24()
end
if CHACKKK1 == 25 then
cr25()
end
if CHACKKK1 == 26 then
cr26()
end
if CHACKKK1 == 27 then
cr27()
end
if CHACKKK1 == 28 then
HOME()
end
end
PUBGMH = -1
end

function cr1()

CLRALLDEVICE1 = gg.multiChoice({"🐦🐦 Color Blue"," 🐛🐛 Color Green","🐴🐴 Orange"," 👄👄Color Pink","🌈 Color Rainbow","🍄🍄Color Red"," 🦷🦷Color White","🐱🐱 Color Yellow","🍌🍌SD 665 Yellow","BACK"}, nil, "")
if CLRALLDEVICE1 == nil then
else
if CLRALLDEVICE1[1] == true then
crldevice1()
end
if CLRALLDEVICE1[2] == true then
crldevice2()
end
if CLRALLDEVICE1[3] == true then
crldevice3()
end
if CLRALLDEVICE1[4] == true then
crldevice4()
end
if CLRALLDEVICE1[5] == true then
crldevice5()
end
if CLRALLDEVICE1[6] == true then
RED()
end
if CLRALLDEVICE1[7] == true then
crldevice7()
end
if CLRALLDEVICE1[8] == true then
YELL()
end
if CLRALLDEVICE1[9] == true then
Y665()
end
if CLRALLDEVICE1[10] == true then
CLR()
end
PUBGMH = -1
end
end
function Y665()
      gg.clearResults()
      gg.searchNumber("8,200;1,194,344,477;8,201:9", gg["TYPE_DWORD"], false, gg["SIGN_EQUAL"], 0, -1)
      gg.searchNumber("", gg["TYPE_DWORD"], false, gg["SIGN_EQUAL"], 0, -1)
      gg.getResults(100)
      gg.editAll("7", gg.TYPE_DWORD)
      gg.toast("C.665 Yellow ")
      gg.clearResults()
    end
function crldevice1()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("256;655370;128;8200;16;243;201;539246603:129", 4, false, 536870912, 0, -1)
gg.searchNumber("8200", 4, false, 536870912, 0, -1)
gg.getResults(100)
gg.editAll("3", 4)
gg.clearResults()
gg.toast("☬ Color All Device Blue ☬")
end

function crldevice2()

gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("8201",gg.TYPE_DWORD,false,gg.SIGN_EQUAL,0,-1)
gg.searchNumber("8201",gg.TYPE_DWORD,false,gg.SIGN_EQUAL,0,-1)
gg.getResults(15)
gg.editAll("7",gg.TYPE_DWORD)
gg.clearResults()
gg.toast("Colour Green activated!")
end

function crldevice3()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("1.1490647e-41;1.0863203e-19::", 16, false, 536870912, 0, -1)
gg.searchNumber("1.0863203e-19", 16, false, 536870912, 0, -1)
gg.getResults(30)
gg.editAll("1.0863203e-25", 16)
gg.clearResults()
gg.toast("☬ Color All Device Orange ☬")
end

function crldevice4()

gg.clearResults()
gg.setRanges(gg.REGION_VIDEO or 131072)
gg.searchNumber("4641040797046013952", 32, false, 536870912, 0, -1)
gg.sleep(140)
gg.refineNumber("4641040797046013952", 32, false, 536870912, 0, -1)
gg.sleep(140)
gg.refineAddress("720", -1, 32, 536870912, 0, -1)
gg.refineNumber("4641040797046013952", 32, false, 536870912, 0, -1)
gg.getResults(1401)
gg.editAll("4641040797046013935", 32)
gg.clearResults()
gg.toast("☬ Color All Device Pink ☬")
end

function crldevice5()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("4.5926155869782e-41;1.0863202718415e-19", 16, false, 536870912, 0, -1)
gg.searchNumber("1.0863202718415e-19", 16, false, 536870912, 0, -1)
gg.getResults(10)
gg.editAll("1.0863202718415e-25", 16)
gg.clearResults()
gg.toast("☬ Color All Device Rainbow ☬")
end

function crldevice7()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("8,192D;256D;8200D", 4, false, 536870912, 0, -1)
gg.searchNumber("8200", 4, false, 536870912, 0, -1)
gg.getResults(20)
gg.editAll("4", 4)
gg.clearResults()
gg.toast("☬ Color All Device White ☬")
end

function cr2()

CHACK22 = gg.multiChoice({"  Exynos Black"," Color Exynos Pink","✧ New Color Exynos Red ","✧ Color Exynos Red HDR","✧ Color Exynos White","✧ New Color Exynos Yellow","✧ Color Exynos 7870 Red","✧ New Color Exynos 7870 Yellow","✧ Color Exynos 8890 Red","⎋BACK"}, nil, "🇮🇩 Script Gilang Faisal V12.1 🇮🇩\n🇮🇩 Youtube Channel: Gilang Faisal 🇮🇩\n🇮🇩 Instagram: @Gilangfaisal53 🇮🇩")
if CHACK22 == nil then
else
if CHACK22[1] == true then
cree1()
end
if CHACK22[2] == true then
cree2()
end
if CHACK22[3] == true then
cree3()
end
if CHACK22[4] == true then
cree4()
end
if CHACK22[5] == true then
cree5()
end
if CHACK22[6] == true then
cree6()
end
if CHACK22[7] == true then
cree7()
end
if CHACK22[8] == true then
cree8()
end
if CHACK22[9] == true then
cree9()
end
if CHACK22[10] == true then
CLR()
end
end
PUBGMH = -1
end

function cree1()

gg.clearResults()
gg.setRanges(32)
gg.searchNumber("573.70306396484;0.05499718338;1::50", 16, false, 536870912, 0, -1)
gg.searchNumber("1", 16, false, 536870912, 0, -1)
gg.getResults(1)
gg.editAll("-999", 16)
gg.clearResults()
gg.toast("☬ Color Exynos Black ☬")
end

function cree2()

gg.clearResults()
gg.setRanges(4)
gg.searchNumber("56;64;3:21", 4, false, 536870912, 0, -1)
gg.searchNumber("56", 4, false, 536870912, 0, -1)
gg.getResults(100)
gg.editAll("38", 4)
gg.toast("☬ Color Exynos Pink ☬")
end

function cree3()

gg.setRanges(4)
gg.searchNumber("1.1210388e-44;360.0;0.5:41", 16, false, 536870912, 0, -1)
gg.refineNumber("0.5", 16, false, 536870912, 0, -1)
gg.getResults(200, nil, nil, nil, nil, nil, nil, nil, nil)
gg.getResults(200, nil, nil, nil, nil, nil, nil, nil, nil)
gg.addListItems({})
gg.processResume()
gg.clearResults()
gg.searchNumber("40;32;48;16;802824192:29", 4, false, 536870912, 0, -1)
gg.refineNumber("40", 4, false, 536870912, 0, -1)
gg.getResults(200, nil, nil, nil, nil, nil, nil, nil, nil)
gg.getResults(200, nil, nil, nil, nil, nil, nil, nil, nil)
gg.addListItems({})
gg.processResume()
gg.toast("☬ Color Exynos Red ☬")
end

function cree4()

gg.clearResults()
gg.searchNumber("40D;32D;16D;2D::53", 4, false, 536870912, 0, -1)
gg.refineNumber("40", 4, false, 536870912, 0, -1)
revert = gg.getResults(200, nil, nil, nil, nil, nil, nil, nil, nil)
for i, i in ipairs((gg.getResults(200, nil, nil, nil, nil, nil, nil, nil, nil))) do
if i.flags == 4 then
end
end
gg.addListItems((gg.getResults(200, nil, nil, nil, nil, nil, nil, nil, nil)))
gg.toast("☬ Color Exynos Red HDR ☬")
end

function cree5()

gg.clearResults()
gg.setRanges(32)
gg.searchNumber("573.70306396484;0.05499718338;1::50", 16, false, 536870912, 0, -1)
gg.searchNumber("1", 16, false, 536870912, 0, -1)
gg.getResults(1)
gg.editAll("999", 16)
gg.clearResults()
gg.toast("☬ Color Exynos White ☬")
end

function cree6()

gg.clearResults()
gg.setRanges(4)
gg.searchNumber("1.1210388e-44;360.0;0.5:41", 16, false, 536870912, 0, -1)
gg.refineNumber("0.5", 16, false, 536870912, 0, -1)
gg.getResults(200, nil, nil, nil, nil, nil, nil, nil, nil)
gg.getResults(200, nil, nil, nil, nil, nil, nil, nil, nil)
gg.addListItems({})
gg.processResume()
gg.clearResults()
gg.searchNumber("40;32;48;16;802824192:29", 4, false, 536870912, 0, -1)
gg.refineNumber("40", 4, false, 536870912, 0, -1)
gg.getResults(200, nil, nil, nil, nil, nil, nil, nil, nil)
gg.getResults(200, nil, nil, nil, nil, nil, nil, nil, nil)
gg.addListItems({})
gg.processResume()
gg.toast("☬ Color Exynos Yellow ☬")
end

function cree7()

gg.clearResults()
gg.setRanges(4)
gg.searchNumber("24;802824704;32;2::21", 4, false, 536870912, 0, -1)
gg.refineNumber("24", 4, false, 536870912, 0, -1)
gg.getResults(5)
gg.editAll("22", 4)
gg.toast("☬ Color Exynos 7870 Red ☬")
end

function cree8()

gg.clearResults()
gg.setRanges(4)
gg.searchNumber("232;80;6;160;88;6;128;4", 4, false, 536870912, 0, -1)
gg.refineNumber("88", 4, false, 536870912, 0, -1)
gg.getResults(25)
gg.editAll("89", 4)
gg.clearResults()
gg.toast("☬ Color Exynos 7870 Yellow ☬")
end

function cree9()

gg.setRanges(4)
gg.clearResults()
gg.searchNumber("224D;128D;224D;14D;40D;64D;64D;12D;140D;16D;156D;32D;168D:533", 4, false, 536870912, 0, -1)
gg.processResume()
gg.refineNumber("40", 4, false, 536870912, 0, -1)
gg.getResults(786)
gg.editAll("40;102", 4)
gg.toast("☬ Color Exynos 8890 Red ☬")
end

function cr3()

CLHDRAEVICE1 = gg.multiChoice({"✧ Color HDR Blue","✧ Color HDR Diamond","✧ Color HDR Green","✧ Color HDR Rainbow","✧ Color HDR Red","✧ Color HDR Yellow","BACK"}, nil, "")
if CLHDRAEVICE1 == nil then
else
if CLHDRAEVICE1[1] == true then
crldhdrce1()
end
if CLHDRAEVICE1[2] == true then
crldhdrce2()
end
if CLHDRAEVICE1[3] == true then
crldhdrce3()
end
if CLHDRAEVICE1[4] == true then
crldhdrce4()
end
if CLHDRAEVICE1[5] == true then
crldhdrce5()
end
if CLHDRAEVICE1[6] == true then
crldhdrce6()
end
if CLHDRAEVICE1[7] == true then
CLR()
end
end
PUBGMH = -1
end

function crldhdrce1()
gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("8201", 4, false, 536870912, 0, -1)
gg.refineAddress("0B0")
gg.getResults(999)
gg.editAll("8198", 4)
gg.clearResults()
gg.toast("☬ Color HDR Blue ☬")
end

function crldhdrce2()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("1,661,337,615D;8,200D;1,194,380,049D:9", 4, false, 536870912, 0, -1)
gg.searchNumber("8200", 4, false, 536870912, 0, -1)
gg.getResults(30)
gg.editAll("70", 4)
gg.clearResults()
gg.toast("☬ Color HDR Diamond ☬")
end

function crldhdrce3()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("1,661,337,615D;8,200D;1,194,380,049D:9", 4, false, 536870912, 0, -1)
gg.searchNumber("8200", 4, false, 536870912, 0, -1)
gg.getResults(30)
gg.editAll("8230", 4)
gg.clearResults()
gg.toast("☬ Color HDR Green ☬")
end

function crldhdrce4()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("1,661,337,615D;8,200D;1,194,380,049D:9", 4, false, 536870912, 0, -1)
gg.searchNumber("8200", 4, false, 536870912, 0, -1)
gg.getResults(30)
gg.editAll("74", 4)
gg.clearResults()
gg.toast("☬ Color HDR Rainbow ☬")
end

function crldhdrce5()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("8200;1,194,380,071;0;256:21", 4, false, 536870912, 0, -1)
gg.searchNumber("8200", 4, false, 536870912, 0, -1)
gg.getResults(15)
gg.editAll("7", 4)
gg.editAll("3", 4)
gg.clearResults()
gg.toast("☬ Color HDR Red ☬")
end

function crldhdrce6()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("1,661,337,615D;8,200D;1,194,380,049D:9", 4, false, 536870912, 0, -1)
gg.searchNumber("8200", 4, false, 536870912, 0, -1)
gg.getResults(30)
gg.editAll("65", 4)
gg.clearResults()
gg.toast("☬ Color HDR Yellow ☬")
end

function cr4()

CHACK33 = gg.multiChoice({"✧ Color Kirin Black","✧ Color Kirin Green","✧ Color Kirin Red","✧ Color Kirin White","✧ Color Kirin Yellow","✧ Color Kirin 659 Green","✧ Color Kirin 659 Red","✧ Color Kirin 710 Green","✧ Color Kirin 710 Yellow","⎋BACK"}, nil, "")
if CHACK33 == nil then
else
if CHACK33[1] == true then
creee1()
end
if CHACK33[2] == true then
creee2()
end
if CHACK33[3] == true then
creee3()
end
if CHACK33[4] == true then
creee4()
end
if CHACK33[5] == true then
creee5()
end
if CHACK33[6] == true then
creee6()
end
if CHACK33[7] == true then
creee7()
end
if CHACK33[8] == true then
creee8()
end
if CHACK33[9] == true then
creee9()
end
if CHACK33[10] == true then
CLR()
end
end
PUBGMH = -1
end

function creee1()

gg.clearResults()
gg.setRanges(4)
gg.searchNumber("40D;32D;16D;2D::37", 4, false, 536870912, 0, -1)
gg.searchNumber("40", 4, false, 536870912, 0, -1)
gg.getResults(100)
gg.editAll("39", 4)
gg.toast("☬ Color Kirin Black ☬")
end

function creee2()

gg.clearResults()
gg.setRanges(4)
gg.searchNumber("2;2;8;6;40:45", 4, false, 536870912, 0, -1)
gg.processResume()
gg.refineNumber("40", 4, false, 536870912, 0, -1)
gg.getResults(10, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll("32", 4)
gg.processResume()
gg.toast("☬ Color Kirin Green ☬")
end

function creee3()

gg.clearResults()
gg.setRanges(4)
gg.searchNumber("16;32;40;48;40:41", 4, false, 536870912, 0, -1)
gg.searchNumber("40", 4, false, 536870912, 0, -1)
gg.getResults(10)
gg.editAll("25", 4)
gg.toast("☬ Color Kirin Red ☬")
end

function creee4()

gg.clearResults()
gg.setRanges(4)
gg.searchNumber("40D;32D;16D;2D::37", 4, false, 536870912, 0, -1)
gg.searchNumber("40", 4, false, 536870912, 0, -1)
gg.getResults(100)
gg.editAll("42", 4)
gg.toast("☬ Color Kirin White ☬")
end

function creee5()

gg.clearResults()
gg.setRanges(4)
gg.searchNumber("16;32;40;48;40:41", 4, false, 536870912, 0, -1)
gg.searchNumber("40", 4, false, 536870912, 0, -1)
gg.getResults(10)
gg.editAll("36", 4)
gg.toast("☬ Color Kirin Yellow ☬")
end

function creee6()

gg.clearResults()
gg.searchNumber("24;802824704;32;2:21", 4, false, 536870912, 0, -1)
gg.refineNumber("24", 4, false, 536870912, 0, -1)
revert = gg.getResults(100, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll("20", 4)
gg.processResume()
gg.clearResults()
gg.toast("☬ Color Kirin 659 Green ☬")
end

function creee7()

gg.clearResults()
gg.searchNumber("24;802824704;32;2::21", 4, false, 536870912, 0, -1)
gg.processResume()
gg.refineNumber("24", 4, false, 536870912, 0, -1)
revert = gg.getResults(100, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll("22", 4)
gg.clearResults()
gg.toast("☬ Color Kirin 659 Red ☬")
end

function creee9()

gg.clearResults()
gg.setRanges(gg.REGION_VIDEO or 131072)
gg.searchNumber("8201", 4, false, 536870912, 0, -1)
gg.refineAddress("0A0")
gg.getResults(999)
gg.editAll("8199", 4)
gg.clearResults()
gg.toast("☬ Color Kirin 710 Green ☬")
end

function creee10()

gg.clearResults()
gg.setRanges(4)
gg.searchNumber("3152519739159347240", 32)
gg.addListItems((gg.getResults(20)))
gg.editAll("150", 32)
gg.toast("☬ Color Kirin 710 Yellow ☬")
end

function cr5()

CHACK44 = gg.multiChoice({"✧ Color Mediatek Green [Smooth]","✧ Color Mediatek Green [HD]","✧ Color Mediatek Red [Smooth]","✧ Color Mediatek Red [HD]","✧ Color Mediatek Yellow [Smooth]","✧ Color Mediatek White [Smooth]","✧ Color Mediatek White [HDR]","✧ New Color Mediatek P10 Green","✧ Color Mediatek P60 Blue","✧ Color Mediatek P60 Red","✧ Color Mediatek P60 Yellow","⎋BACK"}, nil, "")
if CHACK44 == nil then
else
if CHACK44[1] == true then
creeee1()
end
if CHACK44[2] == true then
creeee2()
end
if CHACK44[3] == true then
creeee3()
end
if CHACK44[4] == true then
creeee4()
end
if CHACK44[5] == true then
creeee5()
end
if CHACK44[6] == true then
creeee6()
end
if CHACK44[7] == true then
creeee7()
end
if CHACK44[8] == true then
creeee8()
end
if CHACK44[9] == true then
creeee9()
end
if CHACK44[10] == true then
creeee10()
end
if CHACK44[11] == true then
creeee11()
end
if CHACK44[12] == true then
CLR()
end
end
PUBGMH = -1
end

function creeee1()

gg.clearResults()
gg.setRanges(4)
gg.searchNumber("56;64;48::40", 4, false, 536870912, 0, -1)
gg.searchNumber("56", 4, false, 536870912, 0, -1)
gg.getResults(100)
gg.editAll("52", 4)
gg.toast("☬ Color Mediatek Green [Smooth] ☬")
end

function creeee2()

gg.clearResults()
gg.setRanges(4)
gg.searchNumber("38D;14D;24D;48D;41D;16D::209", 4, false, 536870912, 0, -1)
gg.refineNumber("48", 4, false, 536870912, 0, -1)
revert = gg.getResults(100, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll("33", 4)
gg.toast("☬ Color Mediatek Green [HD] ☬")
end

function creeee3()

gg.clearResults()
gg.setRanges(4)
gg.searchNumber("8;16;32;48;40::169", 4, false, 536870912, 0, -1)
gg.searchNumber("40", 4, false, 536870912, 0, -1)
gg.getResults(10)
gg.editAll("38", 4)
gg.clearResults()
gg.toast("☬ Color Mediatek Red [Smooth] ☬")
end

function creeee4()

gg.clearResults()
gg.setRanges(4)
gg.searchNumber("49D;18D;50D;19D;51D;20D;59D;21D;75D;22D::89", 4, false, 536870912, 0, -1)
gg.refineNumber("59", 4, false, 536870912, 0, -1)
revert = gg.getResults(100, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll("44", 4)
gg.toast("☬ Color Mediatek Red [HD] ☬")
end

function creeee5()

gg.clearResults()
gg.setRanges(4)
gg.searchNumber("38D;14D;24D;48D;41D;16D::209", 4, false, 536870912, 0, -1)
gg.refineNumber("48", 4, false, 536870912, 0, -1)
revert = gg.getResults(100, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll("39", 4)
gg.toast("☬ Color Mediatek Yellow  [Smooth]☬")
end

function creeee6()

gg.clearResults()
gg.setRanges(32)
gg.searchNumber("573.70306396484;0.05499718338;1::50", 16, false, 536870912, 0, -1)
gg.searchNumber("1", 16, false, 536870912, 0, -1)
gg.getResults(1)
gg.editAll("999", 16)
gg.toast("☬ Color Mediatek White [Smooth] ☬")
end

function creeee7()

gg.clearResults()
gg.setRanges(4)
gg.searchNumber("74D;48D;49D;18D;50D;19D;51D;20D;59D;22D::121", 4, false, 536870912, 0, -1)
gg.refineNumber("49", 4, false, 536870912, 0, -1)
revert = gg.getResults(100, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll("44", 4)
gg.toast("☬ Color Mediatek White [HDR] ☬")
end

function creeee8()

gg.clearResults()
gg.setRanges(32)
gg.searchNumber("232;88;352:13", 4, false, 536870912, 0, -1)
gg.searchNumber("88", 4, false, 536870912, 0, -1)
gg.getResults(100)
gg.editAll("-2", 4)
gg.toast("☬ Color Mediatek P10 Green ☬")
end

function creeee9()

gg.clearResults()
gg.setRanges(4)
gg.setRanges(4)
gg.searchNumber("802,824,192;48;937,041,920;40;736,370,688;32;802,824,192;48;802,824,192;16;802,824,192;2;2::", 4, false, 536870912, 0, -1)
gg.searchNumber("40", 4, false, 536870912, 0, -1)
gg.getResults(100)
gg.editAll("28", 4)
gg.clearResults()
gg.toast("☬ Color Mediatek P60 Blue ☬")
end

function creeee10()

gg.clearResults()
gg.setRanges(4)
gg.searchNumber("1.68155816e-44F;1.62092562e-12F;3162688022693019688Q;1.62092562e-12F;2.24207754e-44F:241", 32, false, 536870912, 0, -1)
gg.refineNumber("3162688022693019688", 32, false, 536870912, 0, -1)
revert = gg.getResults(25, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll("38", 32)
gg.toast("☬ Color Mediatek P60 Red ☬")
end

function creeee11()

gg.clearResults()
gg.setRanges(4)
gg.searchNumber("1.68155816e-44F;1.62092562e-12F;3162688022693019688Q;1.62092562e-12F;2.24207754e-44F:241", 32, false, 536870912, 0, -1)
gg.refineNumber("3162688022693019688", 32, false, 536870912, 0, -1)
revert = gg.getResults(25, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll("36", 32)
gg.toast("☬ Color Mediatek P60 Yellow ☬")
end

function cr6()

CLRVECHILEICE1 = gg.multiChoice({"✧ Color Vehicle Blue","✧ Color Vehicle Red","✧ Color Vehicle Yellow","⎋BACK"}, nil, "")
if CLRVECHILEICE1 == nil then
else
if CLRVECHILEICE1[1] == true then
crldvechioae1()
end
if CLRVECHILEICE1[2] == true then
crldvechioae2()
end
if CLRVECHILEICE1[3] == true then
crldvechioae3()
end
if CLRVECHILEICE1[4] == true then
CLR()
end
end
PUBGMH = -1
end

function crldvechioae1()

gg.searchNumber("8200;1194380048;283705351;1081098260;15:17", 4, false, 536870912, 0, -1)
gg.refineNumber("8200", 4, false, 536870912, 0, -1)
gg.getResults(100)
gg.editAll("11", 4)
gg.toast("☬ Color Vehicle Blue ☬")
end

function crldvechioae2()

gg.searchNumber("8200;1194380048;283705351;1081098260;15:17", 4, false, 536870912, 0, -1)
gg.refineNumber("8200", 4, false, 536870912, 0, -1)
gg.getResults(100)
gg.editAll("7", 4)
gg.toast("☬ Color Vehicle Red ☬")
end

function crldvechioae3()

gg.searchNumber("8200;1194380048;283705351;1081098260;15:17", 4, false, 536870912, 0, -1)
gg.refineNumber("8200", 4, false, 536870912, 0, -1)
gg.getResults(100)
gg.editAll("6", 4)
gg.toast("☬ Color Vehicle Yellow ☬")
end

function cr7()

CLRSNAP4001 = gg.multiChoice({"✧ Color 400 Green","✧ Color 400 Yellow","⎋BACK"}, nil, "gg")
if CLRSNAP4001 == nil then
else
if CLRSNAP4001[1] == true then
crl4001()
end
if CLRSNAP4001[2] == true then
crl4002()
end
if CLRSNAP4001[3] == true then
CLR()
end
end
PUBGMH = -1
end

function crl4001()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("8,201;8,202;538,968,081:29", 4, false, 536870912, 0, -1)
gg.searchNumber("8202", 4, false, 536870912, 0, -1)
gg.getResults(1)
gg.editAll("8", 4)
gg.clearResults()
gg.toast("☬ Color 400 Green ☬")
end

function crl4002()

gg.setRanges(gg.REGION_BAD)
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("856128", 4, false, 536870912, 0, -1)
gg.getResults(4)
gg.editAll("856118", 4)
gg.clearResults()
gg.searchNumber("196610;1280;196608:25", 4, false, 536870912, 0, -1)
gg.searchNumber("196608", 4, false)
gg.getResults(10)
gg.editAll("9999", 4)
gg.clearResults()
gg.toast("ᴄᴏʟᴏᴜʀ 400 ʏᴇʟʟᴏᴡ")
end 

function cr8()

CLRSNAP4101 = gg.multiChoice({"✧ Color 410 Blue","✧ Color 410 Green","✧ Color 410 Red","✧ Color 410 Yellow","⎋BACK"}, nil, "ENGLISH: If this color is inactive, use color for All Devices\nINDONESIAN: Jika warna ini tidak aktif, gunakan warna untuk Semua Perangkat")
if CLRSNAP4101 == nil then
else
if CLRSNAP4101[1] == true then
crl4101()
end
if CLRSNAP4101[2] == true then
crl4102()
end
if CLRSNAP4101[3] == true then
crl4103()
end
if CLRSNAP4101[4] == true then
crl4104()
end
if CLRSNAP4101[5] == true then
CLR()
end
end
PUBGMH = -1
end

function crl4101()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("1.1490647e-41;1.0863203e-19::", 16, false, 536870912, 0, -1)
gg.searchNumber("1.0863203e-19", 16, false, 536870912, 0, -1)
gg.getResults(30)
gg.editAll("1.0863203e-25", 16)
gg.clearResults()
gg.toast("☬ Color 410 Blue ☬")
end

function crl4102()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("8,201;8,202;538,968,081:29", 4, false, 536870912, 0, -1)
gg.searchNumber("8202", 4, false, 536870912, 0, -1)
gg.getResults(1)
gg.editAll("8", 4)
gg.clearResults()
gg.toast("☬ Color 410 Green ☬")
end

function crl4103()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("8,192;8,204;1,507,345;8,200:129", 4, false, 536870912, 0, -1)
gg.searchNumber("8200", 4, false, 536870912, 0, -1)
gg.getResults(20)
gg.editAll("6", 4)
gg.clearResults()
gg.toast("☬ Color 410 Red ☬")
end

function crl4104()

gg.clearResults()
gg.setRanges(131072)
gg.setRanges(131072)
gg.searchNumber("856128", 4, false, 536870912, 0, -1)
gg.getResults(4)
gg.editAll("856118", 4)
gg.clearResults()
gg.searchNumber("196610;1280;196608:25", 4, false, 536870912, 0, -1)
gg.searchNumber("196608", 4, false)
gg.getResults(10)
gg.editAll("9999", 4)
gg.clearResults()
gg.toast("☬ Color 410 Yellow ☬")
end

function cr9()

CLRSNAP4151 = gg.multiChoice({"✧ Color 415 Green","⎋BACK"}, nil, "")
if CLRSNAP4151 == nil then
else
if CLRSNAP4151[1] == true then
crl4151()
end
if CLRSNAP4151[2] == true then
CLR()
end
end
PUBGMH = -1
end

function crl4151()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("200761;92;8204;856124;108;196610:409", 4, false, 536870912, 0, -1)
gg.refineNumber("8204", 4, false, 536870912, 0, -1)
gg.getResults(1000)
gg.editAll("8500", 4)
gg.setRanges(131072)
gg.searchNumber("856,128", 4, false, 536870912, 0, -1)
gg.getResults(3)
gg.editAll("856093", 4)
gg.clearResults()
gg.searchNumber("196,610;1,280;196,608::25", 4, false, 536870912, 0, -1)
gg.searchNumber("196608", 4, false, 536870912, 0, -1)
gg.getResults(5)
gg.editAll("9999", 4)
gg.clearResults()
gg.toast("☬ Color 4 ☬")
end

function cr10()

CLRSNAP4251 = gg.multiChoice({"✧ Color 425 Blue","✧ Color 425 Green","✧ Color 425 Mix","✧ Color 425 Red","✧ Color 425 Yellow","⎋BACK"}, nil, "")
if CLRSNAP4251 == nil then
else
if CLRSNAP4251[1] == true then
crl4251()
end
if CLRSNAP4251[2] == true then
crl4252()
end
if CLRSNAP4251[3] == true then
crl4253()
end
if CLRSNAP4251[4] == true then
crl4254()
end
if CLRSNAP4251[5] == true then
crl4255()
end
if CLRSNAP4251[6] == true then
CLR()
end
end
PUBGMH = -1
end

function crl4251()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("32,769D;1,086,324,737D;68D;538,968,069D;8,204D:17", 4, false, 536870912, 0, -1)
gg.refineNumber("8204", 4, false, 536870912, 0, -1)
gg.getResults(10)
gg.editAll("9", 4)
gg.clearResults()
gg.toast("☬ Color 425 Blue ☬")
end

function crl4252()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("856,128", 4, false, 536870912, 0, -1)
gg.getResultCount()
gg.getResults(3)
gg.editAll("856095", 4)
gg.clearResults()
gg.searchNumber("196,610;1,280;196,608::25", 4, false, 536870912, 0, -1)
gg.searchNumber("196608", 4, false, 536870912, 0, -1)
gg.getResults(5)
gg.editAll("9999", 4)
gg.toast("☬ Color 425 Green ☬")
end

function crl4253()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("856128", 4, false, 536870912, 0, -1)
gg.getResults(4)
gg.editAll("99", 4)
gg.clearResults()
gg.searchNumber("200761;92;8204;856124;108;196610:409", 4, false, 536870912, 0, -1)
gg.refineNumber("8204", 4, false, 536870912, 0, -1)
revert = gg.getResults(1000, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll("1", 4)
gg.toast("☬ Color 425 Mix ☬")
end

function crl4254()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("200,761;92;8,204;856,124;108;196,610:409", 4, false, 536870912, 0, -1)
gg.refineNumber("8204", 4, false, 536870912, 0, -1)
gg.getResults(3)
gg.editAll("8203", 4)
gg.toast("☬ Color 425 Red ☬")
end

function crl4255()

gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber('8204', gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.processResume()
gg.refineAddress('408', -1, gg.TYPE_DWORD, gg.SIGN_EQUAL, 0, -1)
revert = gg.getResults(10, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll('95', gg.TYPE_DWORD)
gg.addListItems((gg.getResults(10, nil, nil, nil, nil, nil, nil, nil, nil)))
gg.clearResults()
gg.toast("ᴄᴏʟᴏᴜʀ 425 ʏᴇʟʟᴏᴡ")
end 

function cr11()

CLRSNAP4301 = gg.multiChoice({"✧ Color 430 Green","✧ Color 430 Red","⎋BACK"}, nil, "")
if CLRSNAP4301 == nil then
else
if CLRSNAP4301[1] == true then
crl4301()
end
if CLRSNAP4301[2] == true then
crl4302()
end
if CLRSNAP4301[3] == true then
CLR()
end
end
PUBGMH = -1
end

function crl4301()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("200761;92;8204;856124;108;196610:409", 4, false, 536870912, 0, -1)
gg.refineNumber("8204", 4, false, 536870912, 0, -1)
revert = gg.getResults(1000, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll("99", 4)
gg.clearResults()
gg.toast("☬ Color 430 Green ☬")
end

function crl4302()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("4060000BhA;0000200ChA", 4, false, 536870912, 0, -1)
gg.refineNumber("8204", 4, false, 536870912, 0, -1)
revert = gg.getResults(1000, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll("75", 4)
gg.clearResults()
gg.toast("☬ Color 430 Red ☬")
end

function cr12()

CLRSNAP4351 = gg.multiChoice({"✧ Color 435 Green","✧ New Color 435 Red","✧ Color 435 Yellow","✧ New Color 435 White","⎋BACK"}, nil, "")
if CLRSNAP4351 == nil then
else
if CLRSNAP4351[1] == true then
crl4351()
end
if CLRSNAP4351[2] == true then
crl4352()
end
if CLRSNAP4351[3] == true then
crl4353()
end
if CLRSNAP4351[4] == true then
crl4354()
end
if CLRSNAP4351[5] == true then
CLR()
end
end
PUBGMH = -1
end

function crl4351()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("200761;92;8204;856124;108;196610:409", 4, false, 536870912, 0, -1)
gg.refineNumber("8204", 4, false, 536870912, 0, -1)
revert = gg.getResults(1000, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll("99", 4)
gg.clearResults()
gg.toast("☬ Color 435 Green ☬")
end

function crl4352()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("1,661,239,308;8,200;1,194,380,045:9", 4, false, 536870912, 0, -1)
gg.searchNumber("8200", 4, false, 536870912, 0, -1)
gg.getResults(6)
gg.editAll("7", 4)
gg.toast("☬ Color 435 Red ☬")
end

function crl4353()

gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("32768;-2134900726;32769;-2134900725;32770;-2134900724::", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("32769", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(100)
gg.editAll("4", gg.TYPE_DWORD)
gg.clearResults()
gg.toast("ᴄᴏʟᴏᴜʀ 435 ʏᴇʟʟᴏᴡ")
end

function crl4354()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("284,164,106;1,080,035,849;8,200:41", 4, false, 536870912, 0, -1)
gg.searchNumber("8200", 4, false, 536870912, 0, -1)
gg.getResults(3)
gg.editAll("6", 4)
gg.toast("☬ Color 435 White ☬")
end

function cr13()

CLRSNAP4501 = gg.multiChoice({"✧ Color 450 Green","✧ Color 450 Red","✧ Color 450 Yellow","⎋BACK"}, nil, "")
if CLRSNAP4501 == nil then
else
if CLRSNAP4501[1] == true then
crl4501()
end
if CLRSNAP4501[2] == true then
crl4502()
end
if CLRSNAP4501[3] == true then
crl4503()
end
if CLRSNAP4501[4] == true then
CLR()
end
end
PUBGMH = -1
end

function crl4501()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("200761;92;8204;856124;108;196610:409", 4, false, 536870912, 0, -1)
gg.refineNumber("8204", 4, false, 536870912, 0, -1)
revert = gg.getResults(1000, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll("99", 4)
gg.clearResults()
gg.toast("☬ Color 450 Green ☬")
end

function crl4502()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("4060000BhA;0000200ChA", 4, false, 536870912, 0, -1)
gg.refineNumber("8204", 4, false, 536870912, 0, -1)
revert = gg.getResults(1000, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll("75", 4)
gg.clearResults()
gg.toast("☬ Color 450 Red ☬")
end

function crl4503()

gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("1.3912525e-19F;8200;96", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("8200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(10)
gg.editAll("6", gg.TYPE_DWORD)
gg.toast("ᴄᴏʟᴏᴜʀ 450 ʏᴇʟʟᴏᴡ ")
end 

function cr14()

CLRSNAP6101 = gg.multiChoice({"✧ Color 610 Red","✧ Color 610 Yellow","✧ Color 610 White","⎋BACK"}, nil, "")
if CLRSNAP6101 == nil then
else
if CLRSNAP6101[1] == true then
crl6101()
end
if CLRSNAP6101[2] == true then
crl6102()
end
if CLRSNAP6101[3] == true then
crl6103()
end
if CLRSNAP6101[4] == true then
CLR()
end
end
PUBGMH = -1
end

function crl6101()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("1,080,033,292D;786,441D;8,200D::", 4, false, 536870912, 0, -1)
gg.searchNumber("8200", 4, false, 536870912, 0, -1)
gg.getResults(10)
gg.editAll("7", 4)
gg.toast("☬ COLOR 610 Red ☬")
end

function crl6102()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("1,080,033,292D;786,441D;8,200D::", 4, false, 536870912, 0, -1)
gg.searchNumber("8200", 4, false, 536870912, 0, -1)
gg.getResults(10)
gg.editAll("6", 4)
gg.toast("☬ COLOR 610 Yellow ☬")
end

function crl6103()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("1,080,033,292D;786,441D;8,200D::", 4, false, 536870912, 0, -1)
gg.searchNumber("8200", 4, false, 536870912, 0, -1)
gg.getResults(10)
gg.editAll("9", 4)
gg.toast("☬ COLOR 610 White ☬")
end

function cr15()

CLRSNAP6151 = gg.multiChoice({"✧ Color 615 Blue","✧ Color 615 Cyan","✧ Color 615 Green","✧ Color 615 Red","✧ Color 615 Yellow","⎋BACK"}, nil, "")
if CLRSNAP6151 == nil then
else
if CLRSNAP6151[1] == true then
crl6151()
end
if CLRSNAP6151[2] == true then
crl6152()
end
if CLRSNAP6151[3] == true then
crl6153()
end
if CLRSNAP6151[4] == true then
crl6154()
end
if CLRSNAP6151[5] == true then
crl6155()
end
if CLRSNAP6151[6] == true then
CLR()
end
end
PUBGMH = -1
end

function crl6151()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("R_R({5,159,46,192,78,222,123,7,151,45,189,79,229,110,5,148,47,185,81,221,110,255,150,45,181,79,222,112,252,150,42,179,70,215})", 4, false, 536870912, 0, -1)
gg.processResume()
gg.refineNumber("R_R({5,159,46,192,76,230})", 4, false, 536870912, 0, -1)
revert = gg.getResults(10, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll("R_R({5,159,46,192,77,230})", 4)
gg.clearResults()
gg.toast("☬ COLOR 615 Blue ☬")
end

function crl6152()

gg.setRanges(131072)
gg.searchNumber("1,669,398,531;1,280;196,608;1,310,720;268,435,456:45", 4, false, 536870912, 0, -1)
gg.searchNumber("196608", 4, false, 536870912, 0, -1)
gg.getResults(10)
gg.editAll("196619", 4)
gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("1,280;196,619;1,310,720;268,435,456;1,212,416;393,216;196,608:421", 4, false, 536870912, 0, -1)
gg.searchNumber("196608", 4, false, 536870912, 0, -1)
gg.getResults(10)
gg.editAll("196619", 4)
gg.clearResults()
gg.toast("☬ COLOR 615 Cyan ☬")
end

function crl6153()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("R_R({5,159,46,192,78,222,123,7,151,45,189,79,229,110,5,148,47,185,81,221,110,255,150,45,181,79,222,112,252,150,42,179,70,215})", 4, false, 536870912, 0, -1)
gg.processResume()
gg.refineNumber("R_R({5,159,46,192,76,230})", 4, false, 536870912, 0, -1)
revert = gg.getResults(10, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll("R_R({5,159,46,192,77,231})", 4)
gg.clearResults()
gg.toast("☬ COLOR 615 Green ☬")
end

function crl6154()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("R_R({5,159,46,192,78,222,123,7,151,45,189,79,229,110,5,148,47,185,81,221,110,255,150,45,181,79,222,112,252,150,42,179,70,215})", 4, false, 536870912, 0, -1)
gg.processResume()
gg.refineNumber("R_R({5,159,46,192,76,230})", 4, false, 536870912, 0, -1)
revert = gg.getResults(10, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll("R_R({5,159,46,192,78,222})", 4)
gg.clearResults()
gg.toast("☬ COLOR 615 Red ☬")
end

function crl6155()

gg.setRanges(gg.REGION_BAD)
gg.searchNumber("128;786,441;8,200;786,443:25", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("8200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(8)
gg.editAll("6", gg.TYPE_DWORD)
gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("8,196D;8,192D;8198::", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("8200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(8)
gg.editAll("8198", gg.TYPE_DWORD)
gg.clearResults()
gg.toast("ᴄᴏʟᴏᴜʀ 615 ʏᴇʟʟᴏᴡ ")
end 

function cr16()

CLRSNAP6251 = gg.multiChoice({"✧ Color 625 Blue","✧ New Color 625 Green","✧ New Color 625 Red","✧ Color 625 Yellow","⎋BACK"}, nil, "")
if CLRSNAP6251 == nil then
else
if CLRSNAP6251[1] == true then
crl6251()
end
if CLRSNAP6251[2] == true then
crl6252()
end
if CLRSNAP6251[3] == true then
crl6253()
end
if CLRSNAP6251[4] == true then
crl6254()
end
if CLRSNAP6251[5] == true then
CLR()
end
end
PUBGMH = -1
end

function crl6251()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("256;655370;128;8200;16;243;201;539246603:129", 4, false, 536870912, 0, -1)
gg.searchNumber("8200", 4, false, 536870912, 0, -1)
gg.getResults(100)
gg.editAll("3", 4)
gg.clearResults()
gg.toast("☬ COLOR 625 Blue ☬")
end

function crl6252()

gg.clearResults()
gg.setRanges(gg.REGION_VIDEO or 131072)
gg.searchNumber("2305913382252838926", 32, false, 536870912, 0, -1)
gg.searchNumber("2305913382252838926", 32, false, 536870912, 0, -1)
gg.refineAddress("0D0", -1, 32, 536870912, 0, -1)
gg.searchNumber("2305913382252838926", 32, false, 536870912, 0, -1)
gg.getResults(1401)
gg.editAll("2305913382252838924", 32)
gg.clearResults()
gg.searchNumber("7169730606773899507", 32, false, 536870912, 0, -1)
gg.searchNumber("7169730606773899507", 32, false, 536870912, 0, -1)
gg.refineAddress("0C8", -1, 32, 536870912, 0, -1)
gg.searchNumber("7169730606773899507", 32, false, 536870912, 0, -1)
gg.getResults(1401)
gg.editAll("7169730606773831033", 32)
gg.clearResults()
gg.toast("☬ COLOR 625 Green ☬")
end

function crl6253()

gg.clearResults()
gg.searchNumber("8,200;1,194,380,045;786,443:9", 4, false, 536870912, 0, -1)
gg.refineNumber("8200", 4, false, 536870912, 0, -1)
revert = gg.getResults(100, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll("4", 4)
gg.toast("☬ COLOR 625 Red ☬")
end

function crl6254()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("256D;8,200D;13D", 4, false, 536870912, 0, -1)
gg.getResultCount()
gg.searchNumber("8200", 4, false, 536870912, 0, -1)
gg.getResults(20)
gg.editAll("8198", 4)
gg.toast("☬ COLOR 625 Yellow ☬")
end

function cr17()

CLRSNAP6361 = gg.multiChoice({"✧ Color 636 Green","✧ Color 636 Red","✧ Color 636 Yellow","✧ Color 636 White","⎋BACK"}, nil, "")
if CLRSNAP6361 == nil then
else
if CLRSNAP6361[1] == true then
crl6361()
end
if CLRSNAP6361[2] == true then
crl6362()
end
if CLRSNAP6361[3] == true then
crl6363()
end
if CLRSNAP6361[4] == true then
crl6364()
end
if CLRSNAP6361[5] == true then
CLR()
end
end
PUBGMH = -1
end

function crl6361()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("1669332992;536887297;536887305:25", 4, false, 536870912, 0, -1)
gg.processResume()
revert = gg.getResults(10, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll("9999", 4)
gg.clearResults()
gg.toast("☬ COLOR 636 Green ☬")
end

function crl6362()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("8,200D;1,194,380,045D;786,443D:9", ggTYPE_DWORD, false, ggSIGN_EQUAL, 0, -1)
gg.searchNumber("8200", ggTYPE_DWORD, false, ggSIGN_EQUAL, 0, -1)
gg.getResults(20)
gg.editAll("6", ggTYPE_DWORD)
gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("B({50,46,52,57,48,51,49,52,55,101,50,49,70,59,56,50,48,48,68,59,52,53,50,53,57,46,48,54,50,53,70,58,49,55})", ggTYPE_DWORD, false, ggSIGN_EQUAL, 0, -1)
gg.refineNumber("B({56,50,48,48})", ggTYPE_DWORD, false, ggSIGN_EQUAL, 0, -1)
revert = gg.getResults(10, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll("B({55})", ggTYPE_DWORD)
gg.toast("☬ COLOR 636 Red ☬")
end

function crl6363()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("8192;256;6;8200:129", 4, false, 536870912, 0, -1)
gg.processResume()
gg.refineNumber("8200", 4, false, 536870912, 0, -1)
gg.getResults(100, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll("6", 4)
gg.clearResults()
gg.toast("☬ COLOR 636 Yellow ☬")
end

function crl6364()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("256D;8,200D;13D", 4, false, 536870912, 0, -1)
gg.getResultCount()
gg.searchNumber("8200", 4, false, 536870912, 0, -1)
gg.getResults(20)
gg.editAll("8198", 4)
gg.toast("☬ COLOR 636 White ☬")
end

function cr18()

CLRSNAP6501 = gg.multiChoice({"✧ Color 650 Yellow","⎋BACK"}, nil, "")
if CLRSNAP6501 == nil then
else
if CLRSNAP6501[1] == true then
crl6501()
end
if CLRSNAP6501[2] == true then
CLR()
end
end
PUBGMH = -1
end

function crl6501()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("1,661,239,308;8,200;1,194,380,045:9", 4, false, 536870912, 0, -1)
gg.searchNumber("8200", 4, false, 536870912, 0, -1)
gg.getResults(20)
gg.editAll("7", 4)
gg.toast("☬ COLOR 650 Yellow ☬")
end

function cr19()

CLRSNAP6531 = gg.multiChoice({"✧ Color 653 Yellow","⎋BACK"}, nil, "")
if CLRSNAP6531 == nil then
else
if CLRSNAP6531[1] == true then
crl6531()
end
if CLRSNAP6531[2] == true then
CLR()
end
end
PUBGMH = -1
end

function crl6531()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("8,192D;256D;65,540D;12D;8200D", 4, false, 536870912, 0, -1)
gg.searchNumber("8200", 4, false, 536870912, 0, -1)
gg.getResults(10)
gg.editAll("6", 4)
gg.toast("☬ COLOR 653 Yellow ☬")
end

function cr20()

CLRSNAP6601 = gg.multiChoice({"✧ Color 660 Green","✧ Color 660 Red","✧ Color 660 Yellow","⎋BACK"}, nil, "")
if CLRSNAP6601 == nil then
else
if CLRSNAP6601[1] == true then
crl6601()
end
if CLRSNAP6601[2] == true then
crl6602()
end
if CLRSNAP6601[3] == true then
crl6603()
end
if CLRSNAP6601[4] == true then
CLR()
end
end
PUBGMH = -1
end

function crl6601()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("32769", 4, false, 536870912, 0, -1)
gg.refineNumber("32769", 4, false, 536870912, 0, -1)
gg.refineAddress("518")
gg.getResults(9999)
gg.editAll("32772", 4)
gg.clearResults()
gg.toast("☬ COLOR 660 Green ☬")
end

function crl6602()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("96D;8200;196,615", 4, false, 536870912, 0, -1)
gg.searchNumber("8200", 4, false, 536870912, 0, -1)
gg.getResults(10)
gg.editAll("7", 4)
gg.toast("☬ COLOR 660 Red ☬")
end

function crl6603()

gg.setRanges(gg.REGION_BAD)
gg.searchNumber("128;786,441;8,200;786,443:25", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("8200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(8)
gg.editAll("6", gg.TYPE_DWORD)
gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("8,196D;8,192D;8198::", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("8200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(8)
gg.editAll("8198", gg.TYPE_DWORD)
gg.clearResults()
gg.clearResults()
gg.toast("ᴄᴏʟᴏᴜʀ 660 ʏᴇʟʟᴏᴡ")
end 

function cr21()

CLRSNAP6651 = gg.multiChoice({"✧ Color 665 Blue","✧ Color 665 Green","✧ New Color 665 Red ","✧ Color 665 Yellow","⎋BACK"}, nil, "")
if CLRSNAP6651 == nil then
else
if CLRSNAP6651[1] == true then
crl6651()
end
if CLRSNAP6651[2] == true then
crl6652()
end
if CLRSNAP6651[3] == true then
crl6653()
end
if CLRSNAP6651[4] == true then
crl6654()
end
if CLRSNAP6651[5] == true then
CLR()
end
end
PUBGMH = -1
end

function crl6651()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("32.773D;50.331.648D;1.039.516.303D;1.025.761.280D;1.123.024.896D;1.050.800.659D;1.065.353.216D;1.170.939.904D;1.050.222.592D;1.058.422.784D::177", 4, false, 536870912, 0, -1)
gg.searchNumber("32773", 4, false, 536870912, 0, -1)
gg.getResults(25)
gg.editAll("7", 4)
gg.clearResults()
gg.toast("☬ COLOR 665 Blue ☬")
end

function crl6652()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("69,897;147,457;69,739", 4, false, 536870912, 0, -1)
gg.getResults(10)
gg.editAll("7", 4)
gg.clearResults()
gg.toast("☬ COLOR 665 Green ☬")
end

function crl6653()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("8,196D;8,192D;8,200D::", 4, false, 536870912, 0, -1)
gg.searchNumber("8200", 4, false, 536870912, 0, -1)
gg.getResults(10)
gg.editAll("7", 4)
gg.clearResults()
gg.toast("☬ COLOR 665 Red ☬")
end

function crl6654()

gg.setRanges(gg.REGION_BAD)
gg.searchNumber("128;786,441;8,200;786,443:25", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("8200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(8)
gg.editAll("6", gg.TYPE_DWORD)
gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("8,196D;8,192D;8198::", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("8200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(8)
gg.editAll("8198", gg.TYPE_DWORD)
gg.clearResults()
gg.toast("ᴄᴏʟᴏᴜʀ 665 ʏᴇʟʟᴏᴡ")
end 

function cr22()

CLRSNAP6751 = gg.multiChoice({"✧ Color 675 Black [Graphic Smooth]","✧ Color 675 Blue [Graphic Smooth]","✧ Color 675 Green [Graphic Smooth]","✧ Color 675 Green [Graphic HD]","✧ Color 675 White [Graphic HD]","✧ Color 675 Yellow V1 [Graphic Smooth]","✧ Color 675 Yellow V2 [Graphic Smooth]","⎋BACK"}, nil, "")
if CLRSNAP6751 == nil then
else
if CLRSNAP6751[1] == true then
crl6751()
end
if CLRSNAP6751[2] == true then
crl6752()
end
if CLRSNAP6751[3] == true then
crl6753()
end
if CLRSNAP6751[4] == true then
crl6754()
end
if CLRSNAP6751[5] == true then
crl6755()
end
if CLRSNAP6751[6] == true then
crl6756()
end
if CLRSNAP6751[7] == true then
crl6757()
end
if CLRSNAP6751[8] == true then
CLR()
end
end
PUBGMH = -1
end

function crl6751()

gg.clearResults()
gg.setRanges(gg.REGION_VIDEO or 131072)
gg.searchNumber("1,988,957,478,846,464", 32, false, 536870912, 0, -1)
gg.sleep(140)
gg.refineNumber("1,988,957,478,846,464", 32, false, 536870912, 0, -1)
gg.sleep(140)
gg.refineAddress("65C", -1, 32, 536870912, 0, -1)
gg.refineNumber("1,988,957,478,846,464", 32, false, 536870912, 0, -1)
gg.getResults(1401)
gg.editAll("1,988,957,532,585,984", 32)
gg.clearResults()
gg.toast("☬ Color 675 Pink [Graphic HD] ☬")
end

function crl6752()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("8201", 4, false, 536870912, 0, -1)
gg.refineAddress("0B0")
gg.getResults(999)
gg.editAll("8198", 4)
gg.clearResults()
gg.toast("☬ Color 675 Blue [Graphic Smooth] ☬")
end

function crl6753()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("69,897;147,457;69,739", 4, false, 536870912, 0, -1)
gg.getResults(10)
gg.editAll("7", 4)
gg.clearResults()
gg.toast("☬ Color 675 Green [Graphic Smooth] ☬")
end

function crl6754()

gg.clearResults()
gg.setRanges(gg.REGION_VIDEO or 131072)
gg.searchNumber("5,129,670,511,822,905,353", 32, false, 536870912, 0, -1)
gg.sleep(140)
gg.getResults(1401)
gg.editAll("7", 32)
gg.clearResults()
gg.alert("You must setting Graphic HD before active this feature")
gg.toast("☬ Color 675 Green [Graphic HD] ☬")
end

function crl6755()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("8202", 4, false, 536870912, 0, -1)
gg.getResults(330)
gg.editAll("14", 4)
gg.clearResults()
gg.toast("☬ Color 675 White [Graphic HD] ☬")
end

function crl6756()

gg.setRanges(gg.REGION_BAD)
gg.searchNumber("128;786,441;8,200;786,443:25", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("8200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(8)
gg.editAll("6", gg.TYPE_DWORD)
gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("8,196D;8,192D;8198::", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("8200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(8)
gg.editAll("8198", gg.TYPE_DWORD)
gg.clearResults()
gg.toast("ᴄᴏʟᴏᴜʀ 675 ʏᴇʟʟᴏᴡ V1")
end 

function crl6757()

gg.setRanges(gg.REGION_BAD)
gg.searchNumber("128;786,441;8,200;786,443:25", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("8200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(8)
gg.editAll("6", gg.TYPE_DWORD)
gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("8,196D;8,192D;8198::", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("8200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(8)
gg.editAll("8198", gg.TYPE_DWORD)
gg.clearResults()
gg.toast("ᴄᴏʟᴏᴜʀ 675 ʏᴇʟʟᴏᴡ V2")
end 

function cr23()

CLRSNAP7101 = gg.multiChoice({"✧ Color 710 Blue","✧ Color 710 Green","✧ Color 710 Red","✧ Color 710 White","✧ Color 710 Yellow","⎋BACK"}, nil, "")
if CLRSNAP7101 == nil then
else
if CLRSNAP7101[1] == true then
crl7101()
end
if CLRSNAP7101[2] == true then
crl7102()
end
if CLRSNAP7101[3] == true then
crl7103()
end
if CLRSNAP7101[4] == true then
crl7104()
end
if CLRSNAP7101[5] == true then
crl7105()
end
if CLRSNAP7101[6] == true then
CLR()
end
end
PUBGMH = -1
end

function crl7101()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("1,194,344,475D;8,201D;1,194,379,806D:9", 4, false, 536870912, 0, -1)
gg.searchNumber("8201", 4, false, 536870912, 0, -1)
gg.getResults(10)
gg.editAll("6", 4)
gg.clearResults()
gg.toast("☬ Color 710 Blue ☬")
end

function crl7102()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("8201", 4, false, 536870912, 0, -1)
gg.refineAddress("0A0", -1, 4, 536870912, 0, -1)
gg.getResults(5)
gg.editAll("8199", 4)
gg.clearResults()
gg.toast("☬ Color 710 Green ☬")
end

function crl7103()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("1,194,344,475D;8,201D;1,194,379,806D:9", 4, false, 536870912, 0, -1)
gg.searchNumber("8200", 4, false, 536870912, 0, -1)
gg.getResults(10)
gg.editAll("6", 4)
gg.clearResults()
gg.toast("☬ Color 710 Red ☬")
end

function crl7104()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("8,192D;256D;8200D", 4, false, 536870912, 0, -1)
gg.searchNumber("8200", 4, false, 536870912, 0, -1)
gg.getResults(20)
gg.editAll("4", 4)
gg.clearResults()
gg.toast("☬ Color 710 White ☬")
end

function crl7105()

gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("8196D;8192D;8200D", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("8200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(4)
gg.editAll("8198", gg.TYPE_DWORD)
gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("1.3912525e-19F;8200;96", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("8200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(4)
gg.editAll("6", gg.TYPE_DWORD)
gg.clearResults()
gg.toast("ᴄᴏʟᴏᴜʀ 710 Yellow")
end 

function cr24()

CLRSNAP7121 = gg.multiChoice({"✧ Color 712 Green","✧ New Color 712 Red","✧ Color 712 Yellow","⎋BACK"}, nil, "")
if CLRSNAP7121 == nil then
else
if CLRSNAP7121[1] == true then
crl7121()
end
if CLRSNAP7121[2] == true then
crl7122()
end
if CLRSNAP7121[3] == true then
crl7123()
end
if CLRSNAP7121[4] == true then
CLR()
end
end
PUBGMH = -1
end

function crl7121()

gg.setRanges(131072)
gg.searchNumber("8201", 4, false, 536870912, 0, -1)
gg.getResults(999)
gg.editAll("8199", 4)
gg.clearResults()
gg.toast("☬ Color 712 Green ☬")
end

function crl7122()

gg.clearResults()
gg.setRanges(gg.REGION_VIDEO or 131072)
gg.searchNumber("1,081,081,875D;8,200D;1,194,344,485D:9", 4, false, 536870912, 0, -1)
gg.searchNumber("8200", 4, false, 536870912, 0, -1)
gg.getResults(100)
gg.editAll("13", 4)
gg.clearResults()
gg.toast("☬ Color 712 Red ☬")
end

function crl7123()

gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("8196D;8192D;8200D", 4, false, 536870912, 0, -1)
gg.searchNumber("8200", 4, false, 536870912, 0, -1)
gg.getResults(4)
gg.editAll("6", 4)
gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("1703959D;8200D;8201D:17", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("1703959;8200;8201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(10)
gg.editAll("6;7;8199", gg.TYPE_DWORD)
gg.clearResults()
gg.toast("ᴄᴏʟᴏᴜʀ 712 ʏᴇʟʟᴏᴡ")
end 

function cr25()

CLRSNAP8351 = gg.multiChoice({"✧ Color 835 Green","✧ Color 835 Red","✧ Color 835 Yellow","⎋BACK"}, nil, "")
if CLRSNAP8351 == nil then
else
if CLRSNAP8351[1] == true then
crl8351()
end
if CLRSNAP8351[2] == true then
crl8352()
end
if CLRSNAP8351[3] == true then
crl8353()
end
if CLRSNAP8351[4] == true then
CLR()
end
end
PUBGMH = -1
end

function crl8351()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("8201", 4, false, 536870912, 0, -1)
gg.refineNumber("0A0")
gg.getResults(999)
gg.editAll("8199", 4)
gg.clearResults()
gg.toast("☬ COLOR 835 GREEN ☬")
end

function crl8352()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("8200", 4, false, 536870912, 0, -1)
gg.refineAddress("098", -1, 4, 536870912, 0, -1)
gg.getResults(20)
gg.editAll("8199", 4)
gg.clearResults()
gg.toast("☬ COLOR 835 RED ☬")
end

function crl8353()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("8200", 4, false, 536870912, 0, -1)
gg.refineAddress("098", -1, 4, 536870912, 0, -1)
gg.getResults(20)
gg.editAll("8198", 4)
gg.clearResults()
gg.toast("☬ COLOR 835 YELLOW ☬")
end

function cr26()

CLRSNAP8451 = gg.multiChoice({"✧ Color 845 Green","✧ Color 845 Red","✧ Color 845 Red HDR","✧ New Color 845 Yellow","⎋BACK"}, nil, "")
if CLRSNAP8451 == nil then
else
if CLRSNAP8451[1] == true then
crl8451()
end
if CLRSNAP8451[2] == true then
crl8452()
end
if CLRSNAP8451[3] == true then
crl8453()
end
if CLRSNAP8451[4] == true then
crl8454()
end
if CLRSNAP8451[5] == true then
CLR()
end
end
PUBGMH = -1
end

function crl8451()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("262,159;8,200;6:25", 4, false, 536870912, 0, -1)
gg.searchNumber("8201", 4, false, 536870912, 0, -1)
gg.getResults(10)
gg.editAll("8198", 4)
gg.setRanges(131072)
gg.searchNumber("262,159;8,200;6:25", 4, false, 536870912, 0, -1)
gg.searchNumber("8201", 4, false, 536870912, 0, -1)
gg.getResults(10)
gg.editAll("8198", 4)
gg.toast("☬ COLOR 845 GREEN ☬")
end

function crl8452()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("1703959D;8200D;8201D:17", 4, false, 536870912, 0, -1)
gg.refineNumber("8200", 4, false, 536870912, 0, -1)
gg.getResults(10)
gg.editAll("7", 4)
gg.toast("☬ COLOR 845 RED ☬")
end

function crl8453()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("8200;1,194,380,071;0;256:21", 4, false, 536870912, 0, -1)
gg.searchNumber("8200", 4, false, 536870912, 0, -1)
gg.getResults(15)
gg.editAll("7", 4)
gg.editAll("3", 4)
gg.clearResults()
gg.toast("☬ COLOR 845 RED HDR ☬")
end

function crl8454()

gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("8201;8200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(15)
gg.editAll("7;7", gg.TYPE_DWORD)
gg.clearResults()
gg.searchNumber("8201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(999)
gg.editAll("8199", gg.TYPE_DWORD)
gg.toast("ᴄᴏʟᴏᴜʀ 845 ʏᴇʟʟᴏᴡ")
end 

function cr27()

CLRSNAP8551 = gg.multiChoice({"✧ Color 855 Yellow [Graphic HD]","✧ Color 855 Yellow [Graphic Smooth]","✧ Color 855 Red [Graphic HDR]","✧ Color 855 White [Graphic Smooth]","⎋BACK"}, nil, "")
if CLRSNAP8551 == nil then
else
if CLRSNAP8551[1] == true then
crl8551()
end
if CLRSNAP8551[2] == true then
crl8552()
end
if CLRSNAP8551[3] == true then
crl8553()
end
if CLRSNAP8551[4] == true then
crl8554()
end
if CLRSNAP8551[5] == true then
CLR()
end
end
PUBGMH = -1
end

function crl8551()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("8200", 4, false, 536870912, 0, -1)
gg.refineAddress("2A0", -1, 4, 536870912, 0, -1)
revert = gg.getResults(100, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll("1", 4)
gg.clearResults()
gg.searchNumber("8201", 4, false, 536870912, 0, -1)
gg.refineAddress("2A8", -1, 4, 536870912, 0, -1)
revert = gg.getResults(100, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll("1", 4)
gg.toast("☬ COLOR 855 YELLOW [GRAPHIC HD] ☬")
end

function crl8552()
gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("8201;8200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(15)
gg.editAll("7;7", gg.TYPE_DWORD)
gg.clearResults()
gg.searchNumber("8201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(999)
gg.editAll("8199", gg.TYPE_DWORD)
gg.toast("ᴄᴏʟᴏᴜʀ 855 ʏᴇʟʟᴏᴡ")
end 

function crl8553()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("8200", 4, false, 536870912, 0, -1)
gg.refineAddress("328", -1, 4, 536870912, 0, -1)
revert = gg.getResults(100, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll("6", 4)
gg.toast("☬ COLOR 855 RED [GRAPHIC HDR] ☬")
end

function crl8554()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("8201", 4, false, 536870912, 0, -1)
gg.refineAddress("0A0")
gg.getResults(10)
gg.editAll("8197", 4)
gg.clearResults()
gg.toast("☬ COLOR 855 WHITE ☬")
gg.clearResults()
gg.setVisible(false)
gg.clearResults()
end

function NORECM()

gg.alert("- RECOIL HACK PROSSING")
ME()
NOREC()
gg.toast("Done")
end

function CHIP()

WALL22 = gg.multiChoice({"✧ New Wallhack All Device","✧ Wallhack Fix Blink","✧ Wallhack Fix Scope","✧ Wallhack Exynos 7420","✧ Wallhack Exynos 7570","✧ New Wallhack Exynos 7870","✧ Wallhack Exynos 7880","✧ Wallhack Exynos 7885","✧ Wallhack Exynos 8890","✧ Wallhack Exynos 8895","✧ Wallhack Exynos 9610","✧ Wallhack Exynos 9810","✧ Wallhack Huawei","✧ Wallhack Kirin 650","✧ Wallhack Kirin 655","✧ Wallhack Kirin 658","✧ Wallhack Kirin 659","✧ Wallhack Kirin 710","✧ Wallhack Kirin 955","✧ Wallhack Kirin 970","✧ Wallhack Kirin 980","✧ New Wallhack Mediatek 6750","✧ Wallhack Mediatek 6765","✧ Wallhack Mediatek G90T","✧ New Wallhack Mediatek P10","✧ Wallhack Mediatek P22","✧ Wallhack Mediatek P23","✧ Wallhack Mediatek P35","✧ Wallhack Mediatek P60","✧ Wallhack Mediatek P65","✧ Wallhack Mediatek P70","✧ Wallhack Mediatek X20","✧ Wallhack Mediatek X25","✧ Wallhack Note 3","✧ Wallhack Oppo","✧ Wallhack Vivo","⎋BACK"}, nil, "🇲🇲🇲🇲gg V8")
if WALL22 == nil then
else
if WALL22[1] == true then
wc1()
end
if WALL22[2] == true then
wc2()
end
if WALL22[3] == true then
wc3()
end
if WALL22[4] == true then
wc4()
end
if WALL22[5] == true then
wc5()
end
if WALL22[6] == true then
wc6()
end
if WALL22[7] == true then
wc7()
end
if WALL22[8] == true then
wc8()
end
if WALL22[9] == true then
wc9()
end
if WALL22[10] == true then
wc10()
end
if WALL22[11] == true then
wc11()
end
if WALL22[12] == true then
wc12()
end
if WALL22[13] == true then
wc13()
end
if WALL22[14] == true then
wc14()
end
if WALL22[15] == true then
wc15()
end
if WALL22[16] == true then
wc16()
end
if WALL22[17] == true then
wc17()
end
if WALL22[18] == true then
wc18()
end
if WALL22[19] == true then
wc19()
end
if WALL22[20] == true then
wc20()
end
if WALL22[21] == true then
wc21()
end
if WALL22[22] == true then
wc22()
end
if WALL22[23] == true then
wc23()
end
if WALL22[24] == true then
wc24()
end
if WALL22[25] == true then
wc25()
end
if WALL22[26] == true then
wc26()
end
if WALL22[27] == true then
wc27()
end
if WALL22[28] == true then
wc28()
end
if WALL22[29] == true then
wc29()
end
if WALL22[30] == true then
wc30()
end
if WALL22[31] == true then
wc31()
end
if WALL22[32] == true then
wc32()
end
if WALL22[33] == true then
wc33()
end
if WALL22[34] == true then
wc34()
end
if WALL22[35] == true then
wc35()
end
if WALL22[36] == true then
wc36()
end
if WALL22[37] == true then
HOME()
end
end
PUBGMH = -1
end

function wc1()

gg.setRanges(131072)
gg.searchNumber("200744D;4140D;277889028D;2;135215D;65541D;1074790401D", 16, false, 536870912, 0, -1)
gg.refineNumber("2", 16, false, 536870912, 0, -1)
gg.refineAddress("504", -1, 16, 536870912, 0, -1)
gg.getResults(100)
gg.editAll("130", 16)
gg.clearResults()
gg.searchNumber("194D;3.7615819e-37;2;-1;1;-127::", 16, false, 536870912, 0, -1)
gg.refineNumber("2", 16, false, 536870912, 0, -1)
gg.refineAddress("900", -1, 16, 536870912, 0, -1)
gg.getResults(100)
gg.editAll("130", 16)
gg.clearResults()
gg.toast("☬ Wallhack All Device ☬")
end

function wc2()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("5.2806111e-40;6.50000333786;3.7615819e-37;2", 16, false, 536870912, 0, -1)
gg.refineNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(20)
gg.editAll("9999", 16)
gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("1.1202011e-19;1.1202015e-19;3.7615819e-37;255.0;2", 16, false, 536870912, 0, -1)
gg.refineNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(20)
gg.editAll("9999", 16)
gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("4140D;1.1202011e-19~1.1202013e-19;1.1202015e-19~1.1202017e-19;2::", 16, false, 536870912, 0, -1)
gg.refineNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(2)
gg.editAll("99999", 16)
gg.clearResults()
gg.toast("☬ Wallhack Fix Blink ☬")
end

function wc3()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("2.718519e-43F;3.7615819e-37F;2.0F;-1.0F;1.0F;-127.0F;0.00999999978F::200", 16, false, 536870912, 0, -1)
gg.searchNumber(2, 16, false, 536870912, 0, -1)
gg.getResults(3)
gg.editAll("2.001", 16)
gg.searchNumber(2, 16, false, 536870912, 0, -1)
gg.getResults(10)
gg.editAll("120", 16)
gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("5.8013756e-42F;-5.5695588e-40F;2.0F::100", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(3)
gg.editAll("2.001", 16)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(10)
gg.editAll("120", 16)
gg.clearResults()
gg.toast("☬ Wallhack Fix Scope ☬")
end

function wc4()

gg.clearResults()
gg.setRanges(4)
gg.searchNumber("360;0;0;0;-640;1;1;1;0;0;0;0;1;360;640;0.5;0;0;0;0.5;1;1;0;0;0;0;0;1;1;1;1;1,098618e-48:373", 16)
gg.searchNumber("0.5", 16)
t = gg.getResults(10)
gg.editAll("50", 16)
print("addListItems: ", gg.addListItems(t))
gg.toast("☬ Wallhack Exynos 7420 ☬")
end

function wc5()

gg.clearResults()
gg.setRanges(4)
gg.searchNumber("360;0;0;0;-640;1;1;1;0;0;0;0;1;360;640;0.5;0;0;0;0.5;1;1;0;0;0;0;0;1;1;1;1;1,098618e-48:373", 16)
gg.searchNumber("0.5", 16)
t = gg.getResults(10)
gg.editAll("50", 16)
print("addListItems: ", gg.addListItems(t))
gg.toast("☬ Wallhack Exynos 7570 ☬")
end

function wc6()

if w == 1 then
WHFIX7870()
else
gg.clearList()
gg.clearResults()
gg.setRanges(4)
gg.clearResults()
gg.searchNumber("0.5;1", 16, false, 536870912, 0, -1)
gg.processResume()
gg.clearResults()
gg.searchNumber("1", 16, false, 536870912, 0, -1)
gg.processResume()
gg.getResults(100, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll("1", 16)
gg.clearResults()
gg.searchNumber("0.5;2.8025969e-45:161", 16, false, 536870912, 0, -1)
gg.processResume()
gg.clearResults()
gg.searchNumber("0.5", 16, false, 536870912, 0, -1)
gg.processResume()
gg.getResults(100, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll("0.5", 16)
gg.clearResults()
gg.searchNumber("0.5;1.4012985e-45;1.4012985e-45;2.8025969e-45;2.2958874e-41::", 16, false, 536870912, 0, -1)
if gg.getResultCount() == 0 then
gg.alert("🅴🆁🆁🅾🆁\nvᴀʟuᴇ ɴoт ғouɴᴅ")
else
gg.searchNumber("0.5", 16, false, 536870912, 0, -1)
_Count = gg.getResultCount()
_A = gg.getResults(_Count)
last_Count = _Count + 1
w = 1
_T = "☬ Wallhack Exynos 7870 ☬"
WHFIX7870()
end
end
end

function WHFIX7870()

if w == 0 then
gg.alert("🅴🆁🆁🅾🆁\nvᴀʟuᴇ ɴoт ғouɴᴅ")
else
gg.setVisible(false)
_CL = {}
for i = 1, _Count do
end
_C_ = gg.choice(_CL, nil, "☬ Wallhack Exynos 7870 ☬")
for i = 1, _Count do
if _C_ == i then
for i, i in ipairs(_A) do
gg.addListItems(_A)
end
gg.addListItems(_A)
i = _Count
elseif K_2 == _Count + 1 then
HOME()
end
end
end
gg.setVisible(true)
end

function wc7()

gg.searchNumber("0.5;5.1567783e-43;2.2958874e-41:125", 16, false, 536870912, 0, -1)
gg.refineNumber("0.5", 16, false, 536870912, 0, -1)
revert = gg.getResults(20, nil, nil, nil, nil, nil, nil, nil, nil)
for i, i in ipairs((gg.getResults(20, nil, nil, nil, nil, nil, nil, nil, nil))) do
if i.flags == 16 then
end
end
gg.addListItems((gg.getResults(20, nil, nil, nil, nil, nil, nil, nil, nil)))
gg.toast("☬ Wallhack Exynos 7880 ☬")
end

function wc8()

gg.setRanges(4)
gg.clearResults()
gg.searchNumber("3162688022693019688Q;4915678994331860992Q:2293", 32, false, 536870912, 0, -1)
gg.refineNumber("4915678994331860992", 32, false, 536870912, 0, -1)
gg.getResults(10, nil, nil, nil, nil, nil, nil, nil, nil)
gg.getResults(10, nil, nil, nil, nil, nil, nil, nil, nil)
gg.addListItems({})
gg.setRanges(4)
gg.clearResults()
gg.searchNumber("1.5694543e-43F;3162688022693019688Q;1.6209256e-12F;4.4841551e-44F;6.7262326e-44F;2.2420775e-44F::177", 32, false, 536870912, 0, -1)
gg.processResume()
gg.refineNumber("3162688022693019688", 32, false, 536870912, 0, -1)
gg.processResume()
gg.getResults(10, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll("36", 32)
gg.clearResults()
gg.toast("☬ Wallhack Exynos 7885 ☬")
end

function wc9()

gg.clearResults()
gg.setRanges(4)
gg.searchNumber("9.70070386e-38;4.59177481e-40;9.70070386e-38;3.13890856e-43;1.40129846e-45;2.80259693e-45;0.5:441", 16, false, 536870912, 0, -1)
gg.refineNumber("0.5", 16, false, 536870912, 0, -1)
revert = gg.getResults(1, nil, nil, nil, nil, nil, nil, nil, nil)
for i, i in ipairs((gg.getResults(1, nil, nil, nil, nil, nil, nil, nil, nil))) do
if i.flags == 16 then
end
end
gg.addListItems((gg.getResults(1, nil, nil, nil, nil, nil, nil, nil, nil)))
gg.toast("☬ Wallhack Exynos 8890 ☬")
end

function wc10()

if w == 1 then
WHFIX8895()
else
gg.clearList()
gg.clearResults()
gg.setRanges(4)
gg.clearResults()
gg.setRanges(4)
gg.searchNumber("0.5;2.8025969e-45;4D;2D;14D;5D;-1D", 16, false, 536870912, 0, -1)
gg.searchNumber("0.5", 16, false, 536870912, 0, -1)
gg.getResults(100)
gg.editAll("0", 16)
gg.clearResults()
gg.searchNumber("0.5;2.8025969e-45;4D;2D;14D;5D;-1D", 16, false, 536870912, 0, -1)
if gg.getResultCount() == 0 then
gg.toast("☬ Wallhack Exynos 8895 ☬")
else
gg.searchNumber("0.5", 16, false, 536870912, 0, -1)
_Count = gg.getResultCount()
_A = gg.getResults(_Count)
last_Count = _Count + 1
w = 1
_T = "☬ Wallhack Exynos 8895 ☬"
WHFIX8895()
end
end
end

function WHFIX8895()

if w == 0 then
gg.toast("Loading...")
else
gg.setVisible(false)
_CL = {}
for i = 1, _Count do
end
_C_ = gg.choice(_CL, nil, "☬ Wallhack Exynos 8895 ☬")
for i = 1, _Count do
if _C_ == i then
for i, i in ipairs(_A) do
gg.addListItems(_A)
end
gg.addListItems(_A)
i = _Count
elseif K_2 == _Count + 1 then
CHIPSET()
end
end
end
gg.setVisible(true)
end

function wc11()

gg.clearResults()
gg.setRanges(4)
gg.searchNumber("0.5;1.098618e-42;2.80259693e-45;1.40129846e-45;4.48415509e-44;2.80259693e-45;2.2958874e-41;7.00649232e-45::", 16)
gg.searchNumber("0.5", 16)
z = gg.getResults(9)
Bydz_4 = gg.getResultCount()
for i = 1, Bydz_4 do
y = z[i].address
addListItems({})
end
gg.toast("☬ Wallhack Exynos 9610 ☬")
end

function wc12()

if w == 1 then
WHFIX9810()
else
gg.clearList()
gg.clearResults()
gg.setRanges(4)
gg.searchNumber("0.5;360.0;736.0;0.5;1.0;1.0;1.0;1.0:85", 16, false, 536870912, 0, -1)
if gg.getResultCount() == 0 then
gg.alert("Value Not Found")
else
gg.searchNumber("0.5", 16, false, 536870912, 0, -1)
_Count = gg.getResultCount()
_A = gg.getResults(_Count)
last_Count = _Count + 1
w = 1
_T = "Edit Wallhack Value"
WHFIX9810()
end
end
end

function WHFIX9810()

if w == 0 then
gg.alert("Value Not Found")
else
gg.setVisible(false)
_CL = {}
for i = 1, _Count do
end
C = gg.choice(_CL, nil, "Wallhack Exynos 9810")
for i = 1, _Count do
if C == i then
for i, i in ipairs(_A) do
gg.addListItems(_A)
end
gg.addListItems(_A)
i = _Count
elseif K_2 == _Count + 1 then
WA()
end
end
end
gg.toast("☬ Wallhack Exynos 9810 ☬")
end

function wc13()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("2;1.1204989e-19;1.6815582e-44;1.5414283e-44", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(30)
gg.editAll("120", 16)
gg.clearResults()
gg.searchNumber("2;4.7408166e21;5.6896623e-29;4.7961574e21", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(1)
gg.editAll("120", 16)
gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("2;4.8699472e21;2.718519e-43;1.3912525e-19", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(30)
gg.editAll("120", 16)
gg.clearResults()
gg.searchNumber("2;3.2363458e-17;7.3900417e-40;5.3249342e-44", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(40)
gg.editAll("120", 16)
gg.clearResults()
gg.searchNumber("2;4.9252829e21;2.718519e-43;1.3912552e-19", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(20)
gg.editAll("120", 16)
gg.clearResults()
gg.searchNumber("1;4.8699472e21;2.718519e-43;1.3912525e-19", 16, false, 536870912, 0, -1)
gg.searchNumber("1", 16, false, 536870912, 0, -1)
gg.getResults(50)
gg.editAll("120", 16)
gg.clearResults()
gg.searchNumber("1;4.9252829e21;2.718519e-43;1.3912552e-19", 16, false, 536870912, 0, -1)
gg.searchNumber("1", 16, false, 536870912, 0, -1)
gg.getResults(50)
gg.editAll("120", 16)
gg.toast("☬ Wallhack Huawei ☬")
end

function wc14()

gg.clearResults()
gg.searchNumber("8.4077908e-45;4.2038954e-45;1.5694543e-43;1.4012985e-45;2.8025969e-45;268.0;480.0;0.5:149", 16, false, 536870912, 0, -1)
gg.searchNumber("0.5", 16, false, 536870912, 0, -1)
revert = gg.getResults(1000, nil, nil, nil, nil, nil, nil, nil, nil)
for i, i in ipairs((gg.getResults(1000, nil, nil, nil, nil, nil, nil, nil, nil))) do
if i.flags == 16 then
end
end
gg.addListItems((gg.getResults(1000, nil, nil, nil, nil, nil, nil, nil, nil)))
gg.toast("☬ Wallhack Kirin 650 ☬")
end

function wc15()

gg.clearResults()
gg.setRanges(4)
gg.searchNumber("8.5077908e-45;4.2038954e-45;2.8025969e-45;0.5;0.5;2.8025969e-45;1.4012985e-45;7.0064923e-45:337", 16, false, 536870912, 0, -1)
gg.refineNumber("0.5", 16, false, 536870912, 0, -1)
revert = gg.getResults(999, nil, nil, nil, nil, nil, nil, nil, nil)
for i, i in ipairs((gg.getResults(999, nil, nil, nil, nil, nil, nil, nil, nil))) do
if i.flags == 16 then
end
end
gg.addListItems((gg.getResults(999, nil, nil, nil, nil, nil, nil, nil, nil)))
gg.toast("50%")
gg.searchNumber("56;64;80;16;80:93", 4, false, 536870912, 0, -1)
gg.refineNumber("56", 4, false, 536870912, 0, -1)
revert = gg.getResults(999, nil, nil, nil, nil, nil, nil, nil, nil)
for i, i in ipairs((gg.getResults(999, nil, nil, nil, nil, nil, nil, nil, nil))) do
if i.flags == 16 then
end
end
gg.addListItems((gg.getResults(999, nil, nil, nil, nil, nil, nil, nil, nil)))
gg.toast("☬ Wallhack Kirin 655 ☬")
end

function wc16()

gg.clearResults()
gg.setRanges(4)
gg.searchNumber("0.5;1.4012985e-45;1.4012985e-45;3.8115318e-43;2.8025969e-45;2.2958874e-41:125", 16, false, 536870912, 0, -1)
gg.searchNumber("0.5", 16, false, 536870912, 0, -1)
revert = gg.getResults(10, nil, nil, nil, nil, nil, nil, nil, nil)
for i, i in ipairs((gg.getResults(10, nil, nil, nil, nil, nil, nil, nil, nil))) do
if i.flags == 16 then
end
end
gg.addListItems((gg.getResults(10, nil, nil, nil, nil, nil, nil, nil, nil)))
gg.toast("☬ Wallhack Kirin 658 ☬")
end

function wc17()

gg.searchNumber("0.5;1.4012985e-45;4.7083628e-43;2.8025969e-45;2.2958874e-41::109", 16, false, 536870912, 0, -1)
gg.refineNumber("0.5", 16, false, 536870912, 0, -1)
gg.getResults(100, nil, nil, nil, nil, nil, nil, nil, nil)
gg.getResults(100, nil, nil, nil, nil, nil, nil, nil, nil)
gg.addListItems()
gg.toast("☬ Wallhack Kirin 659 ☬")
end

function wc18()

gg.clearResults()
gg.searchNumber("1.8367379e-40;4.5917748e-40;4.2038954e-45;1.4012985e-45;1.793662e-43;1.4012985e-45;2.8025969e-45;1.1210388e-44;0.5:281", 16, false, 536870912, 0, -1)
gg.searchNumber("0.5", 16, false, 536870912, 0, -1)
revert = gg.getResults(1, nil, nil, nil, nil, nil, nil, nil, nil)
for i, i in ipairs((gg.getResults(1, nil, nil, nil, nil, nil, nil, nil, nil))) do
if i.flags == 16 then
end
end
gg.addListItems((gg.getResults(1, nil, nil, nil, nil, nil, nil, nil, nil)))
gg.toast("☬ Wallhack Kirin 710 ☬")
end

function wc19()

gg.clearResults()
gg.setRanges(4)
gg.searchNumber("4.2038954e-45;1.4012985e-45;1.5694543e-43;1.4012985e-45;2.8025969e-45;0.5:109", 16, false, 536870912, 0, -1)
gg.searchNumber("0.5", 16, false, 536870912, 0, -1)
var = gg.getResults(4)
gg.editAll("1", 16)
var = gg.getResults(22)
gg.addListItems(var)
gg.clearResults()
gg.toast("☬ Wallhack Kirin 955 ☬")
end

function wc20()

gg.setRanges(4, 131072)
gg.searchNumber("4.2038954e-45;1.4012985e-45;1.793662e-43;1.4012985e-45;2.8025969e-45;3.5873241e-43;0.5;2.8025969e-45;1.4012985e-45;1.4012985e-45:249", 16, false, 536870912, 0, -1)
gg.refineNumber("0.5", 16, false, 536870912, 0, -1)
revert = gg.getResults(200, nil, nil, nil, nil, nil, nil, nil, nil)
for i, i in ipairs((gg.getResults(200, nil, nil, nil, nil, nil, nil, nil, nil))) do
if i.flags == 16 then
end
end
gg.addListItems((gg.getResults(200, nil, nil, nil, nil, nil, nil, nil, nil)))
gg.processResume()
gg.setRanges(4, 131072)
gg.processResume()
gg.clearResults()
gg.searchNumber("16;32;40;48;40:41", 4, false, 536870912, 0, -1)
gg.processResume()
gg.refineNumber("40", 4, false, 536870912, 0, -1)
gg.processResume()
revert = gg.getResults(200, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll("90", 4)
gg.addListItems((gg.getResults(200, nil, nil, nil, nil, nil, nil, nil, nil)))
gg.clearResults()
gg.toast("☬ Wallhack Kirin 970 ☬")
end

function wc21()

if w == 1 then
WHFIX980()
else
gg.clearList()
gg.clearResults()
gg.setRanges(4)
gg.searchNumber("0.5;360.0;360.0;752.0;752.0;1.0;1.0;1.0;1.0", 16, false, 536870912, 0, -1)
if gg.getResultCount() == 0 then
gg.alert("Value Not Found")
else
gg.searchNumber("0.5", 16, false, 536870912, 0, -1)
_Count = gg.getResultCount()
_A = gg.getResults(_Count)
last_Count = _Count + 1
w = 1
_T = "Edit Wallhack Value"
WHFIX980()
end
end
end

function WHFIX980()

if w == 0 then
gg.alert("Value Not Found")
else
gg.setVisible(false)
_CL = {}
for i = 1, _Count do
end
_C_ = gg.choice(_CL, nil, "Wallhack Kirin 980")
for i = 1, _Count do
if _C_ == i then
for i, i in ipairs(_A) do
gg.addListItems(_A)
end
gg.addListItems(_A)
i = _Count
elseif K_2 == _Count + 1 then
WHK4()
end
end
end
gg.setVisible(true)
gg.toast("☬ Wallhack Kirin 980 ☬")
end

function wc22()

gg.clearResults()
gg.setRanges(4)
gg.searchNumber("9.63412312e-38F;56D:229", 4, false, 536870912, 0, -1)
gg.refineNumber("56", 4, false, 536870912, 0, -1)
revert = gg.getResults(200, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll("56;54", 4)
gg.clearResults()
gg.toast("☬ Wallhack Mediatek 6750 ☬")
end

function wc23()

gg.clearResults()
gg.setRanges(4)
gg.searchNumber("131,074;1;1,131,413,504;1,137,967,104;1,056,964,608:225", 4, false, 536870912, 0, -1)
gg.refineNumber("1,056,964,608", 4, false, 536870912, 0, -1)
revert = gg.getResults(4, nil, nil, nil, nil, nil, nil, nil, nil)
for i, i in ipairs((gg.getResults(4, nil, nil, nil, nil, nil, nil, nil, nil))) do
if i.flags == 4 then
gg.clearResults()
end
end
gg.toast("☬ Wallhack Mediatek 6765 ☬")
end
function wc24()
 gg.clearResults()
 gg.setRanges(gg.REGION_C_ALLOC)
 gg.searchNumber("16;32;40;48;40:41", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
  gg.searchNumber("40", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
  gg.getResults(10)
  gg.editAll("36", gg.TYPE_DWORD)
  gg.clearResults()
  gg.searchNumber("\"1.793662e-43F;3.5873241e-43F;1.1210388e-44F;0.5F:512\"", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
  gg.processResume()
  gg.refineNumber("\"0.5\"", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
  revert = gg.getResults(100, nil, nil, nil, nil, nil, nil, nil, nil)
  for _FORV_3_, _FORV_4_ in ipairs((gg.getResults(100, nil, nil, nil, nil, nil, nil, nil, nil))) do
    if _FORV_4_.flags == gg.TYPE_FLOAT then
      _FORV_4_.value = "\"2\""
      _FORV_4_.freeze = true
    end
  end
  gg.addListItems((gg.getResults(100, nil, nil, nil, nil, nil, nil, nil, nil)))
  gg.processResume()
  gg.processResume()
  gg.processResume()
  gg.processResume()
  gg.processResume()
  gg.processResume()
  gg.processResume()
  gg.processResume()
  revert = gg.getListItems()
  for _FORV_3_, _FORV_4_ in ipairs((gg.getListItems())) do
    if _FORV_4_.flags == gg.TYPE_FLOAT then
      _FORV_4_.value = "\"2.0\""
      _FORV_4_.freeze = true
      _FORV_4_.freezeType = gg.FREEZE_NORMAL
    end
  end
  gg.addListItems((gg.getListItems()))
  gg.processResume()
  gg.toast("☬ Wallhamk Mediatek G90T ☬")
end
function wc25()

gg.clearResults()
gg.setRanges(32)
gg.searchNumber("304D;328D;328D;64D;3,552D:100", 4, false, 536870912, 0, -1)
gg.searchNumber("64", 4, false, 536870912, 0, -1)
gg.getResults(10)
gg.editAll("61", 4)
for i, i in ipairs((gg.getResults(10))) do
end
gg.addListItems((gg.getResults(10)))
gg.toast("☬ Wallhack Mediatek P10 ☬")
end

function wc26()

gg.clearResults()
gg.setRanges(4)
gg.searchNumber("2;6;5;1;0;0;3;4::569", 16, false, 536870912, 0, -1)
gg.searchNumber("3", 16, false, 536870912, 0, -1)
gg.getResults(100)
gg.editAll("140", 16)
var = gg.getResults(43)
gg.addListItems(var)
gg.clearResults()
gg.toast("☬ Wallhack Mediatek P22 ☬")
end

function wc27()

gg.clearResults()
gg.setRanges(4)
gg.searchNumber("0.5;0.27913400531;1.0:57", 16, false, 536870912, 0, -1)
gg.searchNumber("0.5", 16, false, 536870912, 0, -1)
var = gg.getResults(20)
gg.editAll("2", 16)
var = gg.getResults(100)
gg.addListItems(var)
gg.clearResults()
gg.toast("☬ Wallhack Mediatek P23 ☬")
end

function wc28()

gg.clearResults()
gg.setRanges(4)
gg.searchNumber("5;3;1;5", 16, false, 536870912, 0, -1)
gg.searchNumber("3", 16, false, 536870912, 0, -1)
t = gg.getResults(100)
for i = 1, #t do
end
gg.addListItems(t)
gg.clearResults()
gg.setVisible(false)
gg.sleep(150)
for i = 1, 3 do
for i = 1, 15 do
gg.toast("gg")
gg.sleep(70)
end
end
gg.toast("☬ Wallhack Mediatek P35 ☬")
end

function wc29()

gg.clearResults()
setRanges(4)
gg.clearResults()
searchNumber("5.1567783e-43;3.5873241e-43;3.2229865e-44;0.5", 16, false, 536870912, 0, -1)
gg.clearResults()
searchNumber("0.5", 16, false, 536870912, 0, -1)
var = gg.getResults(20)
gg.clearResults()
editAll("2", 16)
var = gg.getResults(100)
gg.clearResults()
addListItems(var)
gg.clearResults()
clearResults()
gg.toast("☬ Wallhack Mediatek P60 ☬")
end

function wc30()

gg.clearResults()
gg.setRanges(4)
gg.searchNumber("1.793662e-43;3.5873241e-43;1.1210388e-44;0.5", 16, false, 536870912, 0, -1)
gg.searchNumber("0.5", 16, false, 536870912, 0, -1)
var = gg.getResults(20)
gg.editAll("2", 16)
var = gg.getResults(100)
gg.addListItems(var)
gg.clearResults()
gg.toast("☬ Wallhack Mediatek P65 ☬")
end

function wc31()

gg.clearResults()
gg.setRanges(4)
gg.searchNumber("1.793662e-43;3.5873241e-43;1.1210388e-44;0.5", 16, false, 536870912, 0, -1)
gg.searchNumber("0.5", 16, false, 536870912, 0, -1)
var = gg.getResults(20)
gg.editAll("2", 16)
var = gg.getResults(100)
gg.addListItems(var)
gg.clearResults()
gg.toast("☬ Wallhack Mediatek P70 ☬")
end

function wc32()

gg.clearResults()
gg.setRanges(4)
gg.searchNumber("0.5;360;640;1;1;1;-640;360::", 16, false, 536870912, 0, -1)
gg.searchNumber("0.5", 16, false, 536870912, 0, -1)
var = gg.getResults(20)
gg.editAll("0", 16)
var = gg.getResults(100)
gg.addListItems(var)
gg.clearResults()
gg.clearResults()
gg.searchNumber("56;64;48::35", 4, false, 536870912, 0, -1)
gg.searchNumber("56", 4, false, 536870912, 0, -1)
gg.getResults(100)
gg.editAll("47", 4)
gg.toast("☬ Wallhack Mediatek X20 ☬")
end

function wc33()

gg.setRanges(4)
gg.searchNumber("640.0;360;0.5;0;640;360;0.5;12000;0.27913400531;0.56855899096::", 16, false, 536870912, 0, -1)
gg.searchNumber("0.5", 16, false, 536870912, 0, -1)
var = gg.getResults(20)
gg.editAll("2", 16)
var = gg.getResults(100)
gg.addListItems(var)
gg.clearResults()
gg.toast("☬ Wallhack Mediatek X25 ☬")
end

function wc34()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("5.1097599e21;2.0;1.6623071e-19;3.6734297e-39;1.66433e10::17", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(30)
gg.editAll("120", 16)
gg.clearResults()
gg.searchNumber("2.0;-1.0;0.0;1.0;-127.0::17", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(30)
gg.editAll("120", 16)
gg.clearResults()
gg.toast("☬ Wallhack Note 3 ☬")
end

function wc35()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("2.0;4.7961574e21;4.7408166e21", 16, false, 536870912, 0, -1)
gg.searchNumber(2, 16, false, 536870912, 0, -1)
gg.getResults(30)
gg.editAll("120", 16)
gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("2.0; 4.8699472e21;4.8699466e21", 16, false, 536870912, 0, -1)
gg.searchNumber(2, 16, false, 536870912, 0, -1)
gg.getResults(30)
gg.editAll("120", 16)
gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("2.0;4.7777152e21;4.7777146e21", 16, false, 536870912, 0, -1)
gg.searchNumber(2, 16, false, 536870912, 0, -1)
gg.getResults(30)
gg.editAll("120", 16)
gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("2.0;4.7961574e21;4.7408166e21", 16, false, 536870912, 0, -1)
gg.searchNumber(2, 16, false, 536870912, 0, -1)
gg.getResults(30)
gg.editAll("120", 16)
gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("2.0;4.8699472e21;4.8699466e21", 16, false, 536870912, 0, -1)
gg.searchNumber(2, 16, false, 536870912, 0, -1)
gg.getResults(30)
gg.editAll("120", 16)
gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("2.0; 4.7777152e21;4.7777146e21", 16, false, 536870912, 0, -1)
gg.searchNumber(2, 16, false, 536870912, 0, -1)
gg.getResults(30)
gg.editAll("120", 16)
gg.toast("☬ Wallhack Oppo ☬")
end

function wc36()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("4,140D;4.7408166e21;5.6896623e-29;4.7961574e21;3.7615819e-37;2:", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(3)
gg.editAll("120", 16)
gg.clearResults()
gg.searchNumber("200,866D;0.24022650719;0.69314718246;0.00999999978;1;-1;2;-127:", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(2)
gg.editAll("120", 16)
gg.clearResults()
gg.searchNumber("32,770D;0.01799999923;0.29907226562;-1;2:", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(4)
gg.editAll("120", 16)
gg.clearResults()
gg.searchNumber("50,331,648D;0.01799999923;0.29907226562;0.5869140625;0.11401367188;-1;2:", 16, false, 536870912, 0, -1)
gg.searchNumber("-1", 16, false, 536870912, 0, -1)
gg.getResults(2)
gg.editAll("120", 16)
gg.clearResults()
gg.searchNumber("50,331,648D;0.04000854492;0.11999511719;-0.02749633789;-0.57177734375;-1;2:", 16, false, 536870912, 0, -1)
gg.searchNumber("-1", 16, false, 536870912, 0, -1)
gg.getResults(1)
gg.editAll("120", 16)
gg.clearResults()
gg.searchNumber("266,400D;0.24022650719;0.69314718246;0.00999999978;1;-1;-127;2:", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(10)
gg.editAll("120", 16)
gg.clearResults()
gg.searchNumber("50,331,648D;0.04000854492;0.11999511719;-0.02749633789;-0.571777343751;2:", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(2)
gg.editAll("120", 16)
gg.clearResults()
gg.searchNumber("4,140D;4.7408149e21;-5.5695588e-40;4.814603e21;3.7615819e-37;2:", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(20)
gg.editAll("120", 16)
gg.clearResults()
gg.toast("☬ Wallhack Vivo ☬")
end

function WH()

MN1 = gg.multiChoice({"{📌1}🔭🔭WH SD 400","{📌2}🔭🔭WH SD 410","{📌3}🔭🔭WH SD 415","{📌4}🔭🔭WH SD 425","{📌5}🔭🔭WH SD 430","{📌6}🔭🔭WH SD 435","{📌7}🔭🔭WH SD 439","{📌8}🔭🔭WH SD 450","{📌9}🔭🔭WH SD 600","{📌10}🔭🔭WH SD 610","{📌11}🔭🔭WH SD 615","{📌12}🔭🔭WH SD 616","{📌13}🔭🔭WH SD 625","{📌14}🔭🔭WH SD 626","{📌15}🔭🔭WH SD 630","{📌16}🔭🔭WH SD 632","{📌17}🔭🔭WH SD 636","{📌18}🔭🔭WH SD 650","{📌19}🔭🔭WH SD 652","{📌20}🔭🔭WH SD 653","{📌21}🔭🔭WH SD 660","{📌22}🔭🔭WH SD 665","{📌23}🔭🔭WH SD 670","{📌24}🔭🔭WH SD 675","{📌25}🔭🔭WH SD 710","{📌26}🔭🔭WH SD 765","{📌27}🔭🔭WH SD 800","{📌28}🔭🔭WH SD 801","{📌29}🔭🔭WH SD 805","{📌30}🔭🔭WH SD 808","{📌31}🔭🔭WH SD 810","{📌32}🔭🔭WH SD 815","{📌33}🔭🔭WH SD 820","{📌34}🔭🔭WH SD 821","{📌35}🔭🔭WH SD 835","{📌36}🔭🔭WH SD 845","{📌37}🔭🔭WH SD 855","[Back]"}, nil, "🇲🇲🇲🇲gg V18 VIP🇲🇲🇲🇲")
if MN1 == nil then
else
if MN1[1] == true then
WH400()
end
if MN1[2] == true then
WH410()
end
if MN1[3] == true then
WH415()
end
if MN1[4] == true then
WH425()
end
if MN1[5] == true then
WH430()
end
if MN1[6] == true then
WH435()
end
if MN1[7] == true then
WH439()
end
if MN1[8] == true then
WH450()
end
if MN1[9] == true then
WH600()
end
if MN1[10] == true then
WH610()
end
if MN1[11] == true then
WH615()
end
if MN1[12] == true then
WH616()
end
if MN1[13] == true then
WH625()
end
if MN1[14] == true then
WH626()
end
if MN1[15] == true then
WH630()
end
if MN1[16] == true then
WH632()
end
if MN1[17] == true then
WH636()
end
if MN1[18] == true then
WH650()
end
if MN1[19] == true then
WH652()
end
if MN1[20] == true then
WH653()
end
if MN1[21] == true then
WH660()
end
if MN1[22] == true then
WH665()
end
if MN1[23] == true then
WH670()
end
if MN1[24] == true then
WH675()
end
if MN1[25] == true then
WH710()
end
if MN1[26] == true then
WH765()
end
if MN1[27] == true then
WH800()
end
if MN1[28] == true then
WH801()
end
if MN1[29] == true then
WH805()
end
if MN1[30] == true then
WH808()
end
if MN1[31] == true then
WH810()
end
if MN1[32] == true then
WH815()
end
if MN1[33] == true then
WH820()
end
if MN1[34] == true then
WH821()
end
if MN1[35] == true then
WH835()
end
if MN1[36] == true then
WH845()
end
if MN1[37] == true then
WH855()
Y855()
end
if MN1[38] == true then
HOME()
end
end
PUBGMH = -1
end

function WH855()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("2;541,343,815D;65,792D;671,236,134D", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(30)
gg.editAll("120", 16)
gg.clearResults()
gg.searchNumber("2;3.7615819e-37;-1.7632462e-38;4.5917748e-41;-1.763246e-38;4.5920551e-41;-1.7632459e-38", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(30)
gg.editAll("120", 16)
gg.clearResults()
gg.searchNumber("2;3.7615819e-37;1.1202056e-19;3.9236357e-44;1.3912567e-19;2.8866748e-43", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(30)
gg.editAll("120", 16)
gg.toast(" Wallhack 855 ")
end
function Y855()
  gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("8201;8200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(15)
gg.editAll("7;7", gg.TYPE_DWORD)
gg.clearResults()
gg.searchNumber("8201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(999)
gg.editAll("8199", gg.TYPE_DWORD)
gg.toast("ᴄᴏʟᴏᴜʀ 855 ʏᴇʟʟᴏᴡ")
end 

function WH400()

gg.clearResults()
gg.setRanges(4)
gg.searchNumber("228;1,073,741,824;1,073,741,824;229;-1,082,130,432:29", 4, false, 536870912, 0, -1)
gg.searchNumber("1,073,741,824", 4, false, 536870912, 0, -1)
gg.getResults(30)
gg.editAll("1,123,024,896", 4)
gg.clearResults()
gg.setRanges(4)
gg.searchNumber("3.3631163e-44;2.0;3.5032462e-44;-1.0;3.643376e-44;3.7835059e-44;-1.0;3.9236357e-44;4.0637655e-44;1.0;-127.0:129", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(100)
gg.editAll("120", 16)
gg.clearResults()
gg.toast("☬ Wallhack 400 ☬")
end

function WH410()

gg.clearResults()
gg.setRanges(AlumKhKvRNpyfObXIcPZZdRlIlfCOmlJvuzlnEuROcTUfoLIHFMZjFZItLPfa.IYLrnNXpUzZEDMDykIDRIyjTvpTSfIjl)
gg.searchNumber("3.1949605e-43;3.1809475e-43;2.0;3.2089735e-43", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(100)
gg.editAll("150", 16)
gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("8204;8205;1,194,344,451", 4, false, 536870912, 0, -1)
gg.searchNumber("8204", 4, false, 536870912, 0, -1)
gg.getResults(100)
gg.editAll("15", 4)
gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("1,669,693,440;8205", 4, false, 536870912, 0, -1)
gg.searchNumber("8205", 4, false, 536870912, 0, -1)
gg.getResults(100)
gg.editAll("8204", 4)
gg.clearResults()
gg.toast("☬ Wallhack 410 ☬")
end

function WH415()

gg.clearResults()
gg.setRanges(AlumKhKvRNpyfObXIcPZZdRlIlfCOmlJvuzlnEuROcTUfoLIHFMZjFZItLPfa.IYLrnNXpUzZEDMDykIDRIyjTvpTSfIjl)
gg.searchNumber("228;1,073,741,824;1,073,741,824;229;-1,082,130,432:29", 4, false, 536870912, 0, -1)
gg.searchNumber("1,073,741,824", 4, false, 536870912, 0, -1)
gg.getResults(30)
gg.editAll("1,123,024,896", 4)
gg.clearResults()
gg.setRanges(AlumKhKvRNpyfObXIcPZZdRlIlfCOmlJvuzlnEuROcTUfoLIHFMZjFZItLPfa.IYLrnNXpUzZEDMDykIDRIyjTvpTSfIjl)
gg.searchNumber("3.3631163e-44;2.0;3.5032462e-44;-1.0;3.643376e-44;3.7835059e-44;-1.0;3.9236357e-44;4.0637655e-44;1.0;-127.0:129", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(100)
gg.editAll("120", 16)
gg.clearResults()
gg.searchNumber("3.1809475e-43;3.1949605e-43;2.0;3.2089735e-43:53", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(100)
gg.editAll("120", 16)
gg.clearResults()
gg.toast("☬ Wallhack 415 ☬")
end

function WH425()

gg.clearResults()
gg.setRanges(4)
gg.searchNumber("3.15292154e-43;2.0;2.0;3.1949605e-43:73", 16, false, 536870912, 0, -1)
gg.refineNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(3000, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll("120", 16)
gg.clearResults()
gg.searchNumber("3.15292154e-43;2.0;2.0;3.1949605e-43;4.34402524e-44;2.0;4.62428493e-44;4.76441478e-44:241", 16, false, 536870912, 0, -1)
gg.refineNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(3000, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll("120", 16)
gg.toast("☬ Wallhack 425 ☬")
end

function WH430()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("2;1.8947657e-40;5.8013756e-42", 16, false, 536870912, 0, -1)
gg.refineNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(999)
gg.editAll("120", 16)
gg.clearResults()
gg.searchNumber("2.718519e-43;3.7615819e-37;2;-1;1;-127", 16, false, 536870912, 0, -1)
gg.refineNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(999)
gg.editAll("120", 16)
gg.clearResults()
gg.toast("☬ Wallhack 430 ☬")
end

function WH435()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.refineAddress("504", -1, 16, 536870912, 0, -1)
gg.getResults(10)
gg.editAll("10", 16)
gg.clearResults()
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.refineAddress("900", -1, 16, 536870912, 0, -1)
gg.getResults(10)
gg.editAll("10", 16)
gg.clearResults()
gg.toast("☬ Wallhack 435 ☬")
end

function WH439()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("5.8013756e-42F;-5.5695588e-40F;2.0F::100", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(30)
gg.editAll("120", 16)
gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("2.718519e-43F;3.7615819e-37F;2.0F;-1.0F;-127.0F::520", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(20)
gg.editAll("120", 16)
gg.clearResults()
gg.toast("☬ Wallhack 439 ☬")
end

function WH450()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("135,215D;4,140D;3.7615819e-37;2::", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(10)
gg.editAll("130", 16)
gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("194D;3.7615819e-37;2;-1;1;-127::", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(10)
gg.editAll("130", 16)
gg.clearResults()
gg.toast("☬ Wallhack 450 ☬")
end

function WH600()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("4,140D;4.7408166e21F;4.7223665e21;0D;0D;0D;0D;0D;0D;-0.0F;2.0F", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(30)
gg.editAll("120", 16)
gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("2.718519e-43;2.0F;-1.0F;1.0F;-127F;0.24022650719F;-0.0", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(30)
gg.editAll("120", 16)
gg.clearResults()
gg.toast("☬ Wallhack 600 ☬")
end

function WH610()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("4,140D;4.7408166e21F;4.7223665e21;0D;0D;0D;0D;0D;0D;-0.0F;2.0F", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(30)
gg.editAll("120", 16)
gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("2.718519e-43;2.0F;-1.0F;1.0F;-127F;0.24022650719F;-0.0", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(30)
gg.editAll("120", 16)
gg.clearResults()
gg.toast("☬ Wallhack 610 ☬")
end

function WH615()

gg.clearResults()
gg.setRanges(AlumKhKvRNpyfObXIcPZZdRlIlfCOmlJvuzlnEuROcTUfoLIHFMZjFZItLPfa.IYLrnNXpUzZEDMDykIDRIyjTvpTSfIjl)
gg.searchNumber("3.3631163e-44;2.0;3.5032462e-44;-1.0;3.643376e-44;3.7835059e-44;-1.0;3.9236357e-44;4.0637655e-44;1.0;-127.0:129", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(100)
gg.editAll("120", 16)
gg.clearResults()
gg.searchNumber("3.1809475e-43;3.1949605e-43;2.0;3.2089735e-43:53", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(100)
gg.editAll("120", 16)
gg.clearResults()
gg.toast("☬ Wallhack 615 ☬")
end

function WH616()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("4,140D;4.7408166e21F;4.7223665e21;0D;0D;0D;0D;0D;0D;-0.0F;2.0F", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(30)
gg.editAll("120", 16)
gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("2.718519e-43;2.0F;-1.0F;1.0F;-127F;0.24022650719F;-0.0", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(30)
gg.editAll("120", 16)
gg.clearResults()
gg.toast("☬ Wallhack 616 ☬")
end

function WH625()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("135,215D;4,140D;3.7615819e-37;2::", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(10)
gg.editAll("130", 16)
gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("194D;3.7615819e-37;2;-1;1;-127::", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(10)
gg.editAll("130", 16)
gg.clearResults()
gg.toast("☬ Wallhack 625 ☬")
end

function WH626()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("1,900,553;178;37;2F::", 4, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(20)
gg.editAll("120", 16)
gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("2.25;3.75000071526;331,813D;2::", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(20)
gg.editAll("120", 16)
gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("720,918;1,081,081,860;397,358;50,331,648;2F::", 4, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(20)
gg.editAll("120", 16)
gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("671,236,101;1,074,790,406;178;12;2F::", 4, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(20)
gg.editAll("120", 16)
gg.clearResults()
gg.toast("☬ Wallhack 626 ☬")
end

function WH630()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("2;1.8947657e-40;5.8013756e-42", 16, false, 536870912, 0, -1)
gg.refineNumber("2", 16, false, 536870912, 0, -1)
gg.refineAddress("504")
gg.getResults(20)
gg.editAll("120", 16)
gg.clearResults()
gg.searchNumber("2.718519e-43;3.7615819e-37;2;-1;1;-127", 16, false, 536870912, 0, -1)
gg.refineNumber("2", 16, false, 536870912, 0, -1)
gg.refineAddress("900")
gg.getResults(20)
gg.editAll("120", 16)
gg.clearResults()
gg.toast("☬ Wallhack 630 ☬")
end

function WH632()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("2;1.8947657e-40;5.8013756e-42", 16, false, 536870912, 0, -1)
gg.refineNumber("2", 16, false, 536870912, 0, -1)
gg.refineAddress("504")
gg.getResults(20)
gg.editAll("120", 16)
gg.clearResults()
gg.searchNumber("2.718519e-43;3.7615819e-37;2;-1;1;-127", 16, false, 536870912, 0, -1)
gg.refineNumber("2", 16, false, 536870912, 0, -1)
gg.refineAddress("900")
gg.getResults(20)
gg.editAll("120", 16)
gg.clearResults()
gg.toast("☬ Wallhack 632 ☬")
end

function WH636()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("2;1.8947657e-40;5.8013756e-42", 16, false, 536870912, 0, -1)
gg.refineNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(100)
gg.editAll("120", 16)
gg.clearResults()
gg.searchNumber("2.718519e-43;3.7615819e-37;2;-1;1;-127", 16, false, 536870912, 0, -1)
gg.refineNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(100)
gg.editAll("120", 16)
gg.toast("☬ Wallhack 636 ☬")
end

function WH650()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("2.718519e-43F;3.7615819e-37F;2.0F;-1.0F;1.0F;-127.0F;0.00999999978F::200", 16, false, 536870912, 0, -1)
gg.searchNumber(2, 16, false, 536870912, 0, -1)
gg.getResults(30)
gg.editAll("120", 16)
gg.clearResults()
gg.searchNumber("5.8013756e-42F;-5.5695588e-40F;2.0F::100", 16, false, 536870912, 0, -1)
gg.searchNumber(2, 16, false, 536870912, 0, -1)
gg.getResults(30)
gg.editAll("120", 16)
gg.clearResults()
gg.toast("☬ Wallhack 650 ☬")
end

function WH652()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("2.718519e-43F;3.7615819e-37F;2.0F;-1.0F;1.0F;-127.0F;0.00999999978F::200", 16, false, 536870912, 0, -1)
gg.searchNumber(2, 16, false, 536870912, 0, -1)
gg.getResults(30)
gg.editAll("120", 16)
gg.clearResults()
gg.searchNumber("5.8013756e-42F;-5.5695588e-40F;2.0F::100", 16, false, 536870912, 0, -1)
gg.searchNumber(2, 16, false, 536870912, 0, -1)
gg.getResults(30)
gg.editAll("120", 16)
gg.clearResults()
gg.toast("☬ Wallhack 652 ☬")
end

function WH653()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("2.718519e-43F;3.7615819e-37F;2.0F;-1.0F;1.0F;-127.0F;0.00999999978F::200", 16, false, 536870912, 0, -1)
gg.searchNumber(2, 16, false, 536870912, 0, -1)
gg.getResults(30)
gg.editAll("120", 16)
gg.clearResults()
gg.searchNumber("5.8013756e-42F;-5.5695588e-40F;2.0F::100", 16, false, 536870912, 0, -1)
gg.searchNumber(2, 16, false, 536870912, 0, -1)
gg.getResults(30)
gg.editAll("120", 16)
gg.clearResults()
gg.toast("☬ Wallhack 653 ☬")
end

function WH660()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("2.718519e-43F;3.7615819e-37F;2.0F;-1.0F;1.0F;-127.0F;0.00999999978F::200", 16, false, 536870912, 0, -1)
gg.searchNumber(2, 16, false, 536870912, 0, -1)
gg.getResults(30)
gg.editAll("120", 16)
gg.clearResults()
gg.searchNumber("5.8013756e-42F;-5.5695588e-40F;2.0F::100", 16, false, 536870912, 0, -1)
gg.searchNumber(2, 16, false, 536870912, 0, -1)
gg.getResults(30)
gg.editAll("120", 16)
gg.clearResults()
gg.toast("☬ Wallhack 660 ☬")
end

function WH665()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("95D;2;9.2194229e-41::100", 16, false, 536870912, 0, -1)
gg.refineNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(999)
gg.editAll("120", 16)
gg.clearResults()
gg.searchNumber("2;-1;0;1;-127;0.24022650719;0.69314718246;0.00999999978::30", 16, false, 536870912, 0, -1)
gg.refineNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(999)
gg.editAll("120", 16)
gg.clearResults()
gg.toast("☬ Wallhack 665 ☬")
end

function WH670()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.refineAddress("200")
gg.getResults(999)
gg.editAll("120", 16)
gg.clearResults()
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.refineAddress("930")
gg.getResults(999)
gg.editAll("120", 16)
gg.clearResults()
gg.toast("☬ Wallhack 670 ☬")
end

function WH675()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.refineAddress("200")
gg.getResults(999)
gg.editAll("120", 16)
gg.clearResults()
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.refineAddress("930")
gg.getResults(999)
gg.editAll("120", 16)
gg.clearResults()
gg.toast("☬ Wallhack 675 ☬")
end

function WH710()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("274,677,779D;2.25000452995;2;1.6623054e-19", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(20)
gg.editAll("130", 16)
gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("218D;3.7615819e-37;2;-1;1", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(10)
gg.editAll("130", 16)
gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("95D;2;9.2194229e-41", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(15)
gg.editAll("130", 16)
gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("206D;3.7615819e-37;2;-1;1", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(10)
gg.editAll("130", 16)
gg.toast("☬ Wallhack 710 ☬")
end

function WH712()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("95D;2;9.2194229e-41::100", 16, false, 536870912, 0, -1)
gg.refineNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(999)
gg.editAll("120", 16)
gg.clearResults()
gg.searchNumber("2;-1;0;1;-127;0.24022650719;0.69314718246;0.00999999978::30", 16, false, 536870912, 0, -1)
gg.refineNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(999)
gg.editAll("120", 16)
gg.clearResults()
gg.toast("☬ Wallhack 712 ☬")
end
function WH765()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber('"1.7506772e-39F;4.7223772e21F;2.0F"', gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
revert = gg.getResults(1000, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll('"100"', gg.TYPE_FLOAT)
gg.processResume()
gg.processResume()

local t = gg.getResults(1000, nil, nil, nil, nil, nil, nil, nil, nil)
gg.addListItems(t)
t = nil

gg.processResume()
gg.refineNumber('"2.5223372e-44F;1.1202051e-19F;2.0F"', gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber('"2.5223372e-44F;1.1202051e-19F;2.0F"', gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
revert = gg.getResults(1000, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll('"100"', gg.TYPE_FLOAT)
gg.processResume()
end


function WH800()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("5.1097599e21;2.0;1.6623071e-19;3.6734297e-39;1.66433e10::17", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(30)
gg.editAll("120", 16)
gg.clearResults()
gg.searchNumber("2.0;-1.0;0.0;1.0;-127.0::17", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(30)
gg.editAll("120", 16)
gg.clearResults()
gg.toast("☬ Wallhack 800 ☬")
end

function WH801()

gg.clearResults()
gg.setRanges(4)
gg.searchNumber("3.15292154e-43;2.0;2.0;3.1949605e-43:73", 16, false, 536870912, 0, -1)
gg.refineNumber("2", 16, false, 536870912, 0, -1)
revert = gg.getResults(3000, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll("120", 16)
gg.clearResults()
gg.searchNumber("3.15292154e-43;2.0;2.0;3.1949605e-43;4.34402524e-44;2.0;4.62428493e-44;4.76441478e-44:241", 16, false, 536870912, 0, -1)
gg.refineNumber("2", 16, false, 536870912, 0, -1)
revert = gg.getResults(3000, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll("120", 16)
gg.toast("☬ Wallhack 801 ☬")
end

function WH805()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("4,140D;4.7408166e21F;4.7223665e21;0D;0D;0D;0D;0D;0D;-0.0F;2.0F", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(30)
gg.editAll("120", 16)
gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("2.718519e-43;2.0F;-1.0F;1.0F;-127F;0.24022650719F;-0.0", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(30)
gg.editAll("120", 16)
gg.clearResults()
gg.toast("☬ Wallhack 805 ☬")
end

function WH808()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("4,140D;4.7408166e21F;4.7223665e21;0D;0D;0D;0D;0D;0D;-0.0F;2.0F", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(30)
gg.editAll("120", 16)
gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("2.718519e-43;2.0F;-1.0F;1.0F;-127F;0.24022650719F;-0.0", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(30)
gg.editAll("120", 16)
gg.clearResults()
gg.toast("☬ Wallhack 808 ☬")
end

function WH810()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("2;1.8947657e-40;5.8013756e-42", 16, false, 536870912, 0, -1)
gg.refineNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(10)
gg.editAll("120", 16)
gg.clearResults()
gg.searchNumber("2.718519e-43;3.7615819e-37;2;-1;1;-127", 16, false, 536870912, 0, -1)
gg.refineNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(10)
gg.editAll("120", 16)
gg.clearResults()
gg.toast("☬ Wallhack 810 ☬")
end

function WH815()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("135,215D;4,140D;3.7615819e-37;2::", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(10)
gg.editAll("130", 16)
gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("194D;3.7615819e-37;2;-1;1;-127::", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(10)
gg.editAll("130", 16)
gg.clearResults()
gg.toast("☬ Wallhack 815 ☬")
end

function WH820()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("2;1.8947657e-40;5.8013756e-42", 16, false, 536870912, 0, -1)
gg.refineNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(10)
gg.editAll("120", 16)
gg.clearResults()
gg.searchNumber("2.718519e-43;3.7615819e-37;2;-1;1;-127", 16, false, 536870912, 0, -1)
gg.refineNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(10)
gg.editAll("120", 16)
gg.clearResults()
gg.toast("☬ Wallhack 820 ☬")
end

function WH821()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("135,215D;4,140D;3.7615819e-37;2::", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(10)
gg.editAll("130", 16)
gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("194D;3.7615819e-37;2;-1;1;-127::", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(10)
gg.editAll("130", 16)
gg.clearResults()
gg.toast("☬ Wallhack 821 ☬")
end

function WH835()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("2.718519e-43F;3.7615819e-37F;2.0F;0.00999999978F::200", 16, false, 536870912, 0, -1)
gg.searchNumber(2, 16, false, 536870912, 0, -1)
gg.getResults(30)
gg.editAll("120", 16)
gg.clearResults()
gg.searchNumber("5.8013756e-42F;-5.5695588e-40F;2.0F::100", 16, false, 536870912, 0, -1)
gg.searchNumber(2, 16, false, 536870912, 0, -1)
gg.getResults(30)
gg.editAll("120", 16)
gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("7.1746481e-43;1.0842022e-19;94.015625;7.0776718e-15;2::", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(5)
gg.editAll("9999", 16)
gg.toast("☬ Wallhack 835 ☬")
end

function WH845()

gg.clearResults()
gg.setRanges(131072)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.refineAddress("200", -1, 16, 536870912, 0, -1)
gg.getResults(20)
gg.editAll("120", 16)
gg.clearResults()
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.refineAddress("930", -1, 16, 536870912, 0, -1)
gg.getResults(20)
gg.editAll("120", 16)
gg.clearResults()
gg.toast("☬ Wallhack 845 ☬")
end

function JP()

gg.clearResults()
gg.setRanges(32)
gg.searchNumber("1;35;443;55;0.57357645035", 16, false, 536870912, 0, -1)
gg.searchNumber("1", 16, false, 536870912, 0, -1)
gg.getResults(500)
gg.editAll("3", 16)
gg.setRanges(32)
gg.searchNumber("3;35;443;55;0.57357645035", 16, false, 536870912, 0, -1)
gg.searchNumber("443", 16, false, 536870912, 0, -1)
gg.getResults(500)
gg.editAll("2500", 16)
gg.clearResults()
gg.setRanges(32)
gg.searchNumber("0;7.0064923e-45;1;100;1;2,500,000,000.0;0.10000000149;88", 16, false, 536870912, 0, -1)
gg.searchNumber("1", 16, false, 536870912, 0, -1)
gg.getResults(100)
gg.editAll("1.7", 16)
gg.clearResults()
gg.toast("JUMP")
end

function WV()

gg.setRanges(32)
gg.searchNumber("220;178;15", 16, false, 536870912, 0, -1)
gg.refineNumber("220", 16, false, 536870912, 0, -1)
gg.getResults(300)
gg.editAll("438", 16)
gg.getResults(300)
gg.clearResults()
gg.toast("wide View")
end

function YELL()

  gg.clearResults()
  gg.setRanges(gg.REGION_BAD)
  gg.searchNumber("256D;8,200D;13D", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
  gg.getResultsCount()
  gg.searchNumber("8200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
  gg.getResults(20)
  gg.editAll("8198", gg.TYPE_DWORD)
  gg.toast("Yellow ")
end

function C5()
  gg.clearResults()
  gg.setRanges(gg.REGION_BAD)
  gg.searchNumber("8,192D;256D;8200D", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
  gg.searchNumber("8200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
  gg.getResults(20)
  gg.editAll("6", gg.TYPE_DWORD)
  gg.toast("C.Yellow V2 Active")
end

function RED()

gg.clearResults()
gg.searchNumber("8,196D;8,192D;8,200D::", 4, false, 536870912, 0, -1)
gg.searchNumber("8200", 4, false, 536870912, 0, -1)
gg.getResults(10)
gg.editAll("7", 4)
gg.clearResults()
gg.toast("red HDR�")
end
function AIM()
gg.clearResults()
gg.setRanges(gg.REGION_C_DATA)
gg.setRanges(gg.REGION_C_DATA)
gg.searchNumber("360;0.0001;1478828288", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("0.0001", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(10)
gg.editAll("2.5;0.0001;2.5;2.5;0.0001", gg.TYPE_FLOAT)
gg.toast("Aimbot 10%")
gg.clearResults()
gg.setRanges(gg.REGION_C_DATA)
gg.searchNumber("2015175168", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("2015175168", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(100)
gg.editAll("0", gg.TYPE_FLOAT)
gg.clearResults()
gg.setRanges(gg.REGION_C_DATA)
gg.searchNumber("-6.1550321e27;-5.7270139e27;-2.786982e28;-1.1368874e-13::", 16)
gg.refineNumber("-2.786982e28", 16)
gg.getResults(1)
gg.editAll("0", 16)
gg.clearResults()
gg.toast(" Fast Aimlock Enabled")
end

function REC()
gg.clearResults()
  gg.setRanges(gg.REGION_C_DATA)
  gg.searchNumber("-309056968;-298841599;-309061065", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
  gg.searchNumber("-298841599", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
  gg.getResults(5)
  gg.editAll("0", gg.TYPE_DWORD)
  gg.clearResults()
  os.remove("/storage/emulated/0/Download/.conj")
gg.toast("Less Recoil")
end

function AUTOHS()
  gg.clearResults()
  gg.setRanges(131072)
  gg.searchNumber("-88.66608428955;26:512", 16, false, 536870912, 0, -1)
  gg.searchNumber("26", 16, false, 536870912, 0, -1)
  gg.getResults(2)
  gg.editAll("-460", 16)
  gg.clearResults()
  gg.searchNumber("-88.73961639404;28:512", 16, false, 536870912, 0, -1)
  gg.searchNumber("28", 16, false, 536870912, 0, -1)
  gg.getResults(2)
  gg.editAll("-560", 16)
  gg.clearResults()
  gg.setRanges(32)
  gg.searchNumber("9.201618;30.5;25", 16, false, 536870912, 0, -1)
  gg.searchNumber("25;30.5", 16, false, 536870912, 0, -1)
  gg.getResults(10)
  gg.editAll("250", 16)
  gg.clearResults()
 
gg.toast(" HS 50% ")
end

function HS(...)
gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("-88.66608428955;26:512", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("26", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(2)
gg.editAll("-460", gg.TYPE_FLOAT)
gg.clearResults()
gg.searchNumber("-88.73961639404;28:512", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("28", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(2)
gg.editAll("-560", gg.TYPE_FLOAT)
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber("9.201618;30.5;25", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("25;30.5", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(10)
gg.editAll("10000", gg.TYPE_FLOAT)
gg.clearResults()
gg.toast("Vip Headshot1000%")
end
function HD()
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber("88000;0.08600000292", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("88000", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(1401)
gg.editAll("37401", gg.TYPE_FLOAT)
gg.clearResults()
gg.toast(" Fix Damage M416 ")
end

function Hss()
gg["clearResults"]()
gg["setRanges"](32)
gg["searchNumber"]("25;30.5", 16, false, 536870912, 0, -1)
gg["getResults"](10)
gg["editAll"]("99999999", 16)
gg["clearResults"]()
gg["toast"]("𝐇𝐞𝐚𝐝𝐬𝐡𝐨𝐭 100%")
end


function SPON()
 gg.setRanges(gg.REGION_C_DATA)
  gg.searchNumber("-8.795458e22;-3.693674e20;-1.2382424e28", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
  gg.searchNumber("-1.2382424e28", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
  gg.getResults(1)
  gg.editAll("1.2382424e28", gg.TYPE_FLOAT)
  gg.clearResults()
  gg.setRanges(gg.REGION_C_DATA)
  gg.searchNumber("-6.1526231e27;-1.0070975e28", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
  gg.searchNumber("-6.1526231e27", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
  gg.getResults(1)
  gg.editAll("0", gg.TYPE_FLOAT)
  gg.clearResults()
  gg.toast("ACTIVE 100%")
end

function SPNOFF()
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber("1.05;1.05;1.05;0.0001;20;0.0005;0.4::50", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("1.05", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(300)
gg.editAll("1", gg.TYPE_FLOAT)
gg.clearResults()
gg.toast("Ultra Flash Speed Off")
end

function Mb()
gg["clearResults"]()
gg["setRanges"](32)
gg["searchNumber"]("25;30.5", 16, false, 536870912, 0, -1)
gg["getResults"](10)
gg["editAll"]("99999999", 16)
gg["clearResults"]()
gg["toast"]("👑MAGIC BULLET 100%👑")
end




function AT()

gg.clearResults()
gg.setRanges(32)
gg.searchNumber("88.50576019287F;87.27782440186F;-100.91194152832F;1F::13", 16, false, 536870912, 0, -1)
gg.searchNumber("88.50576019287F;87.27782440186F;1F", 16, false, 536870912, 0, -1)
gg.getResults(6)
gg.editAll("1.96875;1.96875;999;1.96875;1.96875;999", 16)
gg.clearResults()
gg.toast("Antena Player Activated")
end

function close()
gg.setVisible(true)
print('')
gg.setVisible(true)
gg.alert(" KILLER \n\n ☎️☎️09-951155095")
os.exit()
end
function Bypass()
edit({
{gg.REGION_C_ALLOC}, --Memory Range
{"AntiSeal"}, --Name
{16384, 4},
{16384, 4, 4},
{16384, 8, 4},
{16384, 12, 4},
{16384, 16, 4},
{16384, 20, 4},
{16384, 508, 4},
},
{
{0, -4, 4, true},
{0, -48, 4, true},
{0, -80, 4, true},
{0, -100, 4, true},
{0, 4, 4, true},
{0, 48, 4, true},
{0, 80, 4, true},
{0, 100, 4, true},
})
gg.clearResults()
gg.alert ( " Successful Boy ")
gg.alert (" We are gg ")
gg.toast("Successful boy")
end
function ONOFF()
function split(szFullString, szSeparator) local nFindStartIndex = 1 local nSplitIndex = 1 local nSplitArray = {} while true do local nFindLastIndex = string.find (szFullString, szSeparator, nFindStartIndex) if not nFindLastIndex then nSplitArray[nSplitIndex] = string.sub(szFullString, nFindStartIndex, string.len (szFullString)) break end nSplitArray[nSplitIndex] = string.sub (szFullString, nFindStartIndex, nFindLastIndex - 1) nFindStartIndex = nFindLastIndex + string.len (szSeparator) nSplitIndex = nSplitIndex + 1 end return nSplitArray end function xgxc(szpy, qmxg) for x = 1, #(qmxg) do xgpy = szpy + qmxg[x]["offset"] xglx = qmxg[x]["type"] xgsz = qmxg[x]["value"] xgdj = qmxg[x]["freeze"] if xgdj == nil or xgdj == "" then gg.setValues({[1] = {address = xgpy, flags = xglx, value = xgsz}}) else gg.addListItems({[1] = {address = xgpy, flags = xglx, freeze = xgdj, value = xgsz}}) end xgsl = xgsl + 1 xgjg = true end end function xqmnb(qmnb) gg.clearResults() gg.setRanges(qmnb[1]["memory"]) gg.searchNumber(qmnb[3]["value"], qmnb[3]["type"]) if gg.getResultCount() == 0 then gg.toast(qmnb[2]["name"] .. "@ChannelFairly") else gg.refineNumber(qmnb[3]["value"], qmnb[3]["type"]) gg.refineNumber(qmnb[3]["value"], qmnb[3]["type"]) gg.refineNumber(qmnb[3]["value"], qmnb[3]["type"]) if gg.getResultCount() == 0 then gg.toast(qmnb[2]["name"] .. "开启失败") else sl = gg.getResults(999999) sz = gg.getResultCount() xgsl = 0 if sz > 999999 then sz = 999999 end for i = 1, sz do pdsz = true for v = 4, #(qmnb) do if pdsz == true then pysz = {} pysz[1] = {} pysz[1].address = sl[i].address + qmnb[v]["offset"] pysz[1].flags = qmnb[v]["type"] szpy = gg.getValues(pysz) pdpd = qmnb[v]["lv"] .. ";" .. szpy[1].value szpd = split(pdpd, ";") tzszpd = szpd[1] pyszpd = szpd[2] if tzszpd == pyszpd then pdjg = true pdsz = true else pdjg = false pdsz = false end end end if pdjg == true then szpy = sl[i].address xgxc(szpy, qmxg) end end if xgjg == true then gg.toast(qmnb[2]["name"] .. "Open Successfully, Modify Source" .. xgsl .. "Data Source") else gg.toast(qmnb[2]["name"] .. "No Data Found, Failed To Get Source") end end end end function SearchWrite(Search, Write, Type) gg.clearResults() gg.setVisible(false) gg.searchNumber(Search[1][1], Type) local count = gg.getResultCount() local result = gg.getResults(count) gg.clearResults() local data = {} local base = Search[1][2] if (count > 0) then for i, v in ipairs(result) do v.isUseful = true end for k=2, #Search do local tmp = {} local offset = Search[k][2] - base local num = Search[k][1] for i, v in ipairs(result) do tmp[#tmp+1] = {} tmp[#tmp].address = v.address + offset tmp[#tmp].flags = v.flags end tmp = gg.getValues(tmp) for i, v in ipairs(tmp) do if ( tostring(v.value) ~= tostring(num) ) then result[i].isUseful = false end end end for i, v in ipairs(result) do if (v.isUseful) then data[#data+1] = v.address end end if (#data > 0) then local t = {} local base = Search[1][2] for i=1, #data do for k, w in ipairs(Write) do offset = w[2] - base t[#t+1] = {} t[#t].address = data[i] + offset t[#t].flags = Type t[#t].value = w[1] if (w[3] == true) then local item = {} item[#item+1] = t[#t] item[#item].freeze = true gg.addListItems(item) end end end gg.setValues(t) gg.toast("Open Successfully, Modify Source"..#t.."Data Source") gg.addListItems(t) else gg.toast("Data Not Found，Failed Open Source", false) return false end else gg.toast("Not Found") return false end end

--Activated In Game Zone {Dis-Connected}
gg.setVisible(false)
gg.clearResults()
qmnb = {
{["memory"] = gg.REGION_CODE_APP},
{["name"] = "Dis-Connected\n@ChannelFairly"},
{["value"] = 1.95602303e-35, ["type"] = gg.TYPE_FLOAT},
{["lv"] = 1.17549446e-37, ["offset"] = 4, ["type"] = gg.TYPE_FLOAT},
}
qmxg = {
{["value"] = 0, ["offset"] = 4, ["type"] = gg.TYPE_FLOAT},
}
xqmnb(qmnb)
gg.clearResults()
gg.alert(" active on off")
gg.setVisible(false)
end


print('✪ ᴄʀᴇᴀᴛᴏʀ ʙʏ ★𝐋𝐓𝐍𝐒★ ✪\n©2020 ɴᴇᴡ ɢɢ ᴄᴏᴅᴇs\n➢ Cᴏɴᴛᴀᴄᴛ Cʀᴇᴀᴛᴏʀ :★𝐋𝐓𝐍𝐒★ 𝐊𝐈𝐋𝐋𝐄𝐑\n⊚ ║★𝐋𝐓𝐍𝐒★🇲🇲̩ 𝐒𝐂𝐑𝐈𝐏𝐓🇲🇲║̩ ')
cs = "YOUR DEVICE ALWAYS ROOT"
print("========== ᴛʜᴀɴᴋs🇲🇲★𝐋𝐓𝐍𝐒★🇲🇲  ᴍᴇᴍʙᴇʀs ==========")
while true do
if gg.isVisible(true) then
PUBGMH = 1
gg.setVisible(false)
end
gg.clearResults()
if PUBGMH == 1 then
HOME()
end
end

else
gg.alert(" Fuck Copy Paster \n I know that you are a theif😂😂")
os.exit()
end
